// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: reporting/v2/model.proto

package reporting

import (
	v2 "github.com/sokkit-io/xiphias-model-common/generated/go/common/v2"
	v21 "github.com/sokkit-io/xiphias-model-common/generated/go/groups/v2"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	v22 "github.com/sokkit-io/xiphias-model-common/generated/go/messaging/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Report_ReportReason int32

const (
	Report_UNKNOWN   Report_ReportReason = 0
	Report_ABUSE     Report_ReportReason = 1
	Report_UNWANTED  Report_ReportReason = 2
	Report_OFFENSIVE Report_ReportReason = 3
	Report_SPAM      Report_ReportReason = 4
)

// Enum value maps for Report_ReportReason.
var (
	Report_ReportReason_name = map[int32]string{
		0: "UNKNOWN",
		1: "ABUSE",
		2: "UNWANTED",
		3: "OFFENSIVE",
		4: "SPAM",
	}
	Report_ReportReason_value = map[string]int32{
		"UNKNOWN":   0,
		"ABUSE":     1,
		"UNWANTED":  2,
		"OFFENSIVE": 3,
		"SPAM":      4,
	}
)

func (x Report_ReportReason) Enum() *Report_ReportReason {
	p := new(Report_ReportReason)
	*p = x
	return p
}

func (x Report_ReportReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Report_ReportReason) Descriptor() protoreflect.EnumDescriptor {
	return file_reporting_v2_model_proto_enumTypes[0].Descriptor()
}

func (Report_ReportReason) Type() protoreflect.EnumType {
	return &file_reporting_v2_model_proto_enumTypes[0]
}

func (x Report_ReportReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Report_ReportReason.Descriptor instead.
func (Report_ReportReason) EnumDescriptor() ([]byte, []int) {
	return file_reporting_v2_model_proto_rawDescGZIP(), []int{0, 0}
}

// A user-generated report of inappropriate user behaviour
type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Client-generated UUID. This will be reused for AppendMessagesToReport requests.
	ReportId *v2.Uuid `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	// The type of report being submitted.
	ReportType *Report_ReportType `protobuf:"bytes,2,opt,name=report_type,json=reportType,proto3" json:"report_type,omitempty"`
	// Reason for the report. Note: we don't have validation for ENUM fields.
	ReportReason Report_ReportReason `protobuf:"varint,3,opt,name=report_reason,json=reportReason,proto3,enum=common.reporting.v2.Report_ReportReason" json:"report_reason,omitempty"`
	// Whether the reported behaviour involves a minor from the reporting user's perspective.
	InvolvesMinor bool `protobuf:"varint,4,opt,name=involves_minor,json=involvesMinor,proto3" json:"involves_minor,omitempty"`
	// Optional page of messages related to the report: if the report has no messages, this field will be empty.
	// Additional message pages can be provided for this report through subsequent requests to AppendMessagesToReport.
	MessagePage *MessagesPage `protobuf:"bytes,5,opt,name=message_page,json=messagePage,proto3" json:"message_page,omitempty"`
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporting_v2_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_reporting_v2_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_reporting_v2_model_proto_rawDescGZIP(), []int{0}
}

func (x *Report) GetReportId() *v2.Uuid {
	if x != nil {
		return x.ReportId
	}
	return nil
}

func (x *Report) GetReportType() *Report_ReportType {
	if x != nil {
		return x.ReportType
	}
	return nil
}

func (x *Report) GetReportReason() Report_ReportReason {
	if x != nil {
		return x.ReportReason
	}
	return Report_UNKNOWN
}

func (x *Report) GetInvolvesMinor() bool {
	if x != nil {
		return x.InvolvesMinor
	}
	return false
}

func (x *Report) GetMessagePage() *MessagesPage {
	if x != nil {
		return x.MessagePage
	}
	return nil
}

// A report created in relation to a user profile with no specific chat involved.
type UserProfileReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The persona ID of the user being reported.
	PersonaId *v2.PersonaId `protobuf:"bytes,1,opt,name=persona_id,json=personaId,proto3" json:"persona_id,omitempty"`
}

func (x *UserProfileReport) Reset() {
	*x = UserProfileReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporting_v2_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileReport) ProtoMessage() {}

func (x *UserProfileReport) ProtoReflect() protoreflect.Message {
	mi := &file_reporting_v2_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileReport.ProtoReflect.Descriptor instead.
func (*UserProfileReport) Descriptor() ([]byte, []int) {
	return file_reporting_v2_model_proto_rawDescGZIP(), []int{1}
}

func (x *UserProfileReport) GetPersonaId() *v2.PersonaId {
	if x != nil {
		return x.PersonaId
	}
	return nil
}

// A report created in relation to a group profile, with or without a specific chat involved.
type GroupProfileReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier of the group being reported.
	//
	// Types that are assignable to GroupIdentifier:
	//	*GroupProfileReport_ChatId
	//	*GroupProfileReport_GroupJoinToken
	//	*GroupProfileReport_GroupInviteCode
	GroupIdentifier isGroupProfileReport_GroupIdentifier `protobuf_oneof:"group_identifier"`
}

func (x *GroupProfileReport) Reset() {
	*x = GroupProfileReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporting_v2_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupProfileReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupProfileReport) ProtoMessage() {}

func (x *GroupProfileReport) ProtoReflect() protoreflect.Message {
	mi := &file_reporting_v2_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupProfileReport.ProtoReflect.Descriptor instead.
func (*GroupProfileReport) Descriptor() ([]byte, []int) {
	return file_reporting_v2_model_proto_rawDescGZIP(), []int{2}
}

func (m *GroupProfileReport) GetGroupIdentifier() isGroupProfileReport_GroupIdentifier {
	if m != nil {
		return m.GroupIdentifier
	}
	return nil
}

func (x *GroupProfileReport) GetChatId() *v2.ChatId {
	if x, ok := x.GetGroupIdentifier().(*GroupProfileReport_ChatId); ok {
		return x.ChatId
	}
	return nil
}

func (x *GroupProfileReport) GetGroupJoinToken() *v21.PublicGroupJoinToken {
	if x, ok := x.GetGroupIdentifier().(*GroupProfileReport_GroupJoinToken); ok {
		return x.GroupJoinToken
	}
	return nil
}

func (x *GroupProfileReport) GetGroupInviteCode() *v21.GroupInviteCode {
	if x, ok := x.GetGroupIdentifier().(*GroupProfileReport_GroupInviteCode); ok {
		return x.GroupInviteCode
	}
	return nil
}

type isGroupProfileReport_GroupIdentifier interface {
	isGroupProfileReport_GroupIdentifier()
}

type GroupProfileReport_ChatId struct {
	// The chat ID of the group being reported, if it's available.
	// Will be enforced to refer to a group.
	ChatId *v2.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3,oneof"`
}

type GroupProfileReport_GroupJoinToken struct {
	// A join token for the group being reported.
	GroupJoinToken *v21.PublicGroupJoinToken `protobuf:"bytes,2,opt,name=group_join_token,json=groupJoinToken,proto3,oneof"`
}

type GroupProfileReport_GroupInviteCode struct {
	// A group invite code for the group being reported.
	GroupInviteCode *v21.GroupInviteCode `protobuf:"bytes,3,opt,name=group_invite_code,json=groupInviteCode,proto3,oneof"`
}

func (*GroupProfileReport_ChatId) isGroupProfileReport_GroupIdentifier() {}

func (*GroupProfileReport_GroupJoinToken) isGroupProfileReport_GroupIdentifier() {}

func (*GroupProfileReport_GroupInviteCode) isGroupProfileReport_GroupIdentifier() {}

// A report created in relation to a specific chat.
type ChatReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The chat ID of the chat being reported.
	ChatId *v2.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	// The persona ID of the user that is the focus of the report.
	PersonaId *v2.PersonaId `protobuf:"bytes,2,opt,name=persona_id,json=personaId,proto3" json:"persona_id,omitempty"`
}

func (x *ChatReport) Reset() {
	*x = ChatReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporting_v2_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatReport) ProtoMessage() {}

func (x *ChatReport) ProtoReflect() protoreflect.Message {
	mi := &file_reporting_v2_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatReport.ProtoReflect.Descriptor instead.
func (*ChatReport) Descriptor() ([]byte, []int) {
	return file_reporting_v2_model_proto_rawDescGZIP(), []int{3}
}

func (x *ChatReport) GetChatId() *v2.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *ChatReport) GetPersonaId() *v2.PersonaId {
	if x != nil {
		return x.PersonaId
	}
	return nil
}

type MessagesPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Messages from the client, rebuilt to protobuf form for transmission to the reporting service.
	ReportedMessage []*v22.Message `protobuf:"bytes,1,rep,name=reported_message,json=reportedMessage,proto3" json:"reported_message,omitempty"`
	// Indicates whether the service should wait for more messages from AppendMessagesToReport requests.
	IsFinalPage bool `protobuf:"varint,2,opt,name=is_final_page,json=isFinalPage,proto3" json:"is_final_page,omitempty"`
}

func (x *MessagesPage) Reset() {
	*x = MessagesPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporting_v2_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesPage) ProtoMessage() {}

func (x *MessagesPage) ProtoReflect() protoreflect.Message {
	mi := &file_reporting_v2_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesPage.ProtoReflect.Descriptor instead.
func (*MessagesPage) Descriptor() ([]byte, []int) {
	return file_reporting_v2_model_proto_rawDescGZIP(), []int{4}
}

func (x *MessagesPage) GetReportedMessage() []*v22.Message {
	if x != nil {
		return x.ReportedMessage
	}
	return nil
}

func (x *MessagesPage) GetIsFinalPage() bool {
	if x != nil {
		return x.IsFinalPage
	}
	return false
}

type Report_ReportType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ReportKind:
	//	*Report_ReportType_UserProfileReport
	//	*Report_ReportType_GroupProfileReport
	//	*Report_ReportType_ChatReport
	ReportKind isReport_ReportType_ReportKind `protobuf_oneof:"report_kind"`
}

func (x *Report_ReportType) Reset() {
	*x = Report_ReportType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporting_v2_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report_ReportType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report_ReportType) ProtoMessage() {}

func (x *Report_ReportType) ProtoReflect() protoreflect.Message {
	mi := &file_reporting_v2_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report_ReportType.ProtoReflect.Descriptor instead.
func (*Report_ReportType) Descriptor() ([]byte, []int) {
	return file_reporting_v2_model_proto_rawDescGZIP(), []int{0, 0}
}

func (m *Report_ReportType) GetReportKind() isReport_ReportType_ReportKind {
	if m != nil {
		return m.ReportKind
	}
	return nil
}

func (x *Report_ReportType) GetUserProfileReport() *UserProfileReport {
	if x, ok := x.GetReportKind().(*Report_ReportType_UserProfileReport); ok {
		return x.UserProfileReport
	}
	return nil
}

func (x *Report_ReportType) GetGroupProfileReport() *GroupProfileReport {
	if x, ok := x.GetReportKind().(*Report_ReportType_GroupProfileReport); ok {
		return x.GroupProfileReport
	}
	return nil
}

func (x *Report_ReportType) GetChatReport() *ChatReport {
	if x, ok := x.GetReportKind().(*Report_ReportType_ChatReport); ok {
		return x.ChatReport
	}
	return nil
}

type isReport_ReportType_ReportKind interface {
	isReport_ReportType_ReportKind()
}

type Report_ReportType_UserProfileReport struct {
	UserProfileReport *UserProfileReport `protobuf:"bytes,1,opt,name=user_profile_report,json=userProfileReport,proto3,oneof"`
}

type Report_ReportType_GroupProfileReport struct {
	GroupProfileReport *GroupProfileReport `protobuf:"bytes,2,opt,name=group_profile_report,json=groupProfileReport,proto3,oneof"`
}

type Report_ReportType_ChatReport struct {
	ChatReport *ChatReport `protobuf:"bytes,3,opt,name=chat_report,json=chatReport,proto3,oneof"`
}

func (*Report_ReportType_UserProfileReport) isReport_ReportType_ReportKind() {}

func (*Report_ReportType_GroupProfileReport) isReport_ReportType_ReportKind() {}

func (*Report_ReportType_ChatReport) isReport_ReportType_ReportKind() {}

var File_reporting_v2_model_proto protoreflect.FileDescriptor

var file_reporting_v2_model_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x1a,
	0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x05, 0x0a, 0x06, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08,
	0x01, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01,
	0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0d,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x73, 0x4d, 0x69, 0x6e,
	0x6f, 0x72, 0x12, 0x44, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x96, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x11,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x5b, 0x0a, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x12, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x42,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x22, 0x4d, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x42, 0x55, 0x53, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x57,
	0x41, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x46, 0x46, 0x45, 0x4e,
	0x53, 0x49, 0x56, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x50, 0x41, 0x4d, 0x10, 0x04,
	0x22, 0x50, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x49, 0x64, 0x42,
	0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x49, 0x64, 0x22, 0xfb, 0x01, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4f, 0x0a, 0x11, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x12, 0x0a, 0x10,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x22, 0x7d, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x32,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d,
	0x25, 0x02, 0x08, 0x01, 0x52, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x49, 0x64, 0x22,
	0x88, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x54, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0b, 0xca, 0x9d, 0x25, 0x07, 0x08, 0x01,
	0x78, 0x01, 0x80, 0x01, 0x32, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x42, 0x86, 0x01, 0x0a, 0x1e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5a, 0x4d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69, 0x74,
	0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x32, 0x3b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0xa2, 0x02, 0x14, 0x4b,
	0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_reporting_v2_model_proto_rawDescOnce sync.Once
	file_reporting_v2_model_proto_rawDescData = file_reporting_v2_model_proto_rawDesc
)

func file_reporting_v2_model_proto_rawDescGZIP() []byte {
	file_reporting_v2_model_proto_rawDescOnce.Do(func() {
		file_reporting_v2_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_reporting_v2_model_proto_rawDescData)
	})
	return file_reporting_v2_model_proto_rawDescData
}

var file_reporting_v2_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_reporting_v2_model_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_reporting_v2_model_proto_goTypes = []interface{}{
	(Report_ReportReason)(0),         // 0: common.reporting.v2.Report.ReportReason
	(*Report)(nil),                   // 1: common.reporting.v2.Report
	(*UserProfileReport)(nil),        // 2: common.reporting.v2.UserProfileReport
	(*GroupProfileReport)(nil),       // 3: common.reporting.v2.GroupProfileReport
	(*ChatReport)(nil),               // 4: common.reporting.v2.ChatReport
	(*MessagesPage)(nil),             // 5: common.reporting.v2.MessagesPage
	(*Report_ReportType)(nil),        // 6: common.reporting.v2.Report.ReportType
	(*v2.Uuid)(nil),                  // 7: common.v2.Uuid
	(*v2.PersonaId)(nil),             // 8: common.v2.PersonaId
	(*v2.ChatId)(nil),                // 9: common.v2.ChatId
	(*v21.PublicGroupJoinToken)(nil), // 10: common.groups.v2.PublicGroupJoinToken
	(*v21.GroupInviteCode)(nil),      // 11: common.groups.v2.GroupInviteCode
	(*v22.Message)(nil),              // 12: common.messaging.v2.Message
}
var file_reporting_v2_model_proto_depIdxs = []int32{
	7,  // 0: common.reporting.v2.Report.report_id:type_name -> common.v2.Uuid
	6,  // 1: common.reporting.v2.Report.report_type:type_name -> common.reporting.v2.Report.ReportType
	0,  // 2: common.reporting.v2.Report.report_reason:type_name -> common.reporting.v2.Report.ReportReason
	5,  // 3: common.reporting.v2.Report.message_page:type_name -> common.reporting.v2.MessagesPage
	8,  // 4: common.reporting.v2.UserProfileReport.persona_id:type_name -> common.v2.PersonaId
	9,  // 5: common.reporting.v2.GroupProfileReport.chat_id:type_name -> common.v2.ChatId
	10, // 6: common.reporting.v2.GroupProfileReport.group_join_token:type_name -> common.groups.v2.PublicGroupJoinToken
	11, // 7: common.reporting.v2.GroupProfileReport.group_invite_code:type_name -> common.groups.v2.GroupInviteCode
	9,  // 8: common.reporting.v2.ChatReport.chat_id:type_name -> common.v2.ChatId
	8,  // 9: common.reporting.v2.ChatReport.persona_id:type_name -> common.v2.PersonaId
	12, // 10: common.reporting.v2.MessagesPage.reported_message:type_name -> common.messaging.v2.Message
	2,  // 11: common.reporting.v2.Report.ReportType.user_profile_report:type_name -> common.reporting.v2.UserProfileReport
	3,  // 12: common.reporting.v2.Report.ReportType.group_profile_report:type_name -> common.reporting.v2.GroupProfileReport
	4,  // 13: common.reporting.v2.Report.ReportType.chat_report:type_name -> common.reporting.v2.ChatReport
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_reporting_v2_model_proto_init() }
func file_reporting_v2_model_proto_init() {
	if File_reporting_v2_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_reporting_v2_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporting_v2_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporting_v2_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupProfileReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporting_v2_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporting_v2_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporting_v2_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report_ReportType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_reporting_v2_model_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*GroupProfileReport_ChatId)(nil),
		(*GroupProfileReport_GroupJoinToken)(nil),
		(*GroupProfileReport_GroupInviteCode)(nil),
	}
	file_reporting_v2_model_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Report_ReportType_UserProfileReport)(nil),
		(*Report_ReportType_GroupProfileReport)(nil),
		(*Report_ReportType_ChatReport)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reporting_v2_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_reporting_v2_model_proto_goTypes,
		DependencyIndexes: file_reporting_v2_model_proto_depIdxs,
		EnumInfos:         file_reporting_v2_model_proto_enumTypes,
		MessageInfos:      file_reporting_v2_model_proto_msgTypes,
	}.Build()
	File_reporting_v2_model_proto = out.File
	file_reporting_v2_model_proto_rawDesc = nil
	file_reporting_v2_model_proto_goTypes = nil
	file_reporting_v2_model_proto_depIdxs = nil
}
