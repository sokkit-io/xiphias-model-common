// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: chats/v2/user_chat_settings_model.proto

package chats

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BubbleColor int32

const (
	BubbleColor_COLOR_BRIGHT_RED       BubbleColor = 0
	BubbleColor_COLOR_BRIGHT_PINK      BubbleColor = 1
	BubbleColor_COLOR_BRIGHT_MAGENTA   BubbleColor = 2
	BubbleColor_COLOR_BRIGHT_VIOLET    BubbleColor = 3
	BubbleColor_COLOR_BRIGHT_BLUE      BubbleColor = 4
	BubbleColor_COLOR_BRIGHT_GREEN     BubbleColor = 5
	BubbleColor_COLOR_BRIGHT_KIK_GREEN BubbleColor = 6
	BubbleColor_COLOR_BRIGHT_YELLOW    BubbleColor = 7
	BubbleColor_COLOR_BRIGHT_ORANGE    BubbleColor = 8
	BubbleColor_COLOR_BRIGHT_BROWN     BubbleColor = 9
	BubbleColor_COLOR_BRIGHT_GREY      BubbleColor = 10
	BubbleColor_COLOR_LIGHT_RED        BubbleColor = 11
	BubbleColor_COLOR_LIGHT_PINK       BubbleColor = 12
	BubbleColor_COLOR_LIGHT_MAGENTA    BubbleColor = 13
	BubbleColor_COLOR_LIGHT_VIOLET     BubbleColor = 14
	BubbleColor_COLOR_LIGHT_BLUE       BubbleColor = 15
	BubbleColor_COLOR_LIGHT_AQUA       BubbleColor = 16
	BubbleColor_COLOR_LIGHT_KIK_GREEN  BubbleColor = 17
	BubbleColor_COLOR_LIGHT_YELLOW     BubbleColor = 18
	BubbleColor_COLOR_LIGHT_ORANGE     BubbleColor = 19
	BubbleColor_COLOR_LIGHT_BROWN      BubbleColor = 20
	BubbleColor_COLOR_LIGHT_GREY       BubbleColor = 21
	BubbleColor_COLOR_CHERRY_RED       BubbleColor = 22
	BubbleColor_COLOR_ROSE_PINK        BubbleColor = 23
	BubbleColor_COLOR_PLUM             BubbleColor = 24
	BubbleColor_COLOR_NAVY             BubbleColor = 25
	BubbleColor_COLOR_ARMY_GREEN       BubbleColor = 26
	BubbleColor_COLOR_AVOCADO          BubbleColor = 27
	BubbleColor_COLOR_MANGO            BubbleColor = 28
	BubbleColor_COLOR_PUMPKIN          BubbleColor = 29
	BubbleColor_COLOR_DARK_BROWN       BubbleColor = 30
	BubbleColor_COLOR_EGGPLANT         BubbleColor = 31
	BubbleColor_COLOR_BLACK            BubbleColor = 32
)

// Enum value maps for BubbleColor.
var (
	BubbleColor_name = map[int32]string{
		0:  "COLOR_BRIGHT_RED",
		1:  "COLOR_BRIGHT_PINK",
		2:  "COLOR_BRIGHT_MAGENTA",
		3:  "COLOR_BRIGHT_VIOLET",
		4:  "COLOR_BRIGHT_BLUE",
		5:  "COLOR_BRIGHT_GREEN",
		6:  "COLOR_BRIGHT_KIK_GREEN",
		7:  "COLOR_BRIGHT_YELLOW",
		8:  "COLOR_BRIGHT_ORANGE",
		9:  "COLOR_BRIGHT_BROWN",
		10: "COLOR_BRIGHT_GREY",
		11: "COLOR_LIGHT_RED",
		12: "COLOR_LIGHT_PINK",
		13: "COLOR_LIGHT_MAGENTA",
		14: "COLOR_LIGHT_VIOLET",
		15: "COLOR_LIGHT_BLUE",
		16: "COLOR_LIGHT_AQUA",
		17: "COLOR_LIGHT_KIK_GREEN",
		18: "COLOR_LIGHT_YELLOW",
		19: "COLOR_LIGHT_ORANGE",
		20: "COLOR_LIGHT_BROWN",
		21: "COLOR_LIGHT_GREY",
		22: "COLOR_CHERRY_RED",
		23: "COLOR_ROSE_PINK",
		24: "COLOR_PLUM",
		25: "COLOR_NAVY",
		26: "COLOR_ARMY_GREEN",
		27: "COLOR_AVOCADO",
		28: "COLOR_MANGO",
		29: "COLOR_PUMPKIN",
		30: "COLOR_DARK_BROWN",
		31: "COLOR_EGGPLANT",
		32: "COLOR_BLACK",
	}
	BubbleColor_value = map[string]int32{
		"COLOR_BRIGHT_RED":       0,
		"COLOR_BRIGHT_PINK":      1,
		"COLOR_BRIGHT_MAGENTA":   2,
		"COLOR_BRIGHT_VIOLET":    3,
		"COLOR_BRIGHT_BLUE":      4,
		"COLOR_BRIGHT_GREEN":     5,
		"COLOR_BRIGHT_KIK_GREEN": 6,
		"COLOR_BRIGHT_YELLOW":    7,
		"COLOR_BRIGHT_ORANGE":    8,
		"COLOR_BRIGHT_BROWN":     9,
		"COLOR_BRIGHT_GREY":      10,
		"COLOR_LIGHT_RED":        11,
		"COLOR_LIGHT_PINK":       12,
		"COLOR_LIGHT_MAGENTA":    13,
		"COLOR_LIGHT_VIOLET":     14,
		"COLOR_LIGHT_BLUE":       15,
		"COLOR_LIGHT_AQUA":       16,
		"COLOR_LIGHT_KIK_GREEN":  17,
		"COLOR_LIGHT_YELLOW":     18,
		"COLOR_LIGHT_ORANGE":     19,
		"COLOR_LIGHT_BROWN":      20,
		"COLOR_LIGHT_GREY":       21,
		"COLOR_CHERRY_RED":       22,
		"COLOR_ROSE_PINK":        23,
		"COLOR_PLUM":             24,
		"COLOR_NAVY":             25,
		"COLOR_ARMY_GREEN":       26,
		"COLOR_AVOCADO":          27,
		"COLOR_MANGO":            28,
		"COLOR_PUMPKIN":          29,
		"COLOR_DARK_BROWN":       30,
		"COLOR_EGGPLANT":         31,
		"COLOR_BLACK":            32,
	}
)

func (x BubbleColor) Enum() *BubbleColor {
	p := new(BubbleColor)
	*p = x
	return p
}

func (x BubbleColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BubbleColor) Descriptor() protoreflect.EnumDescriptor {
	return file_chats_v2_user_chat_settings_model_proto_enumTypes[0].Descriptor()
}

func (BubbleColor) Type() protoreflect.EnumType {
	return &file_chats_v2_user_chat_settings_model_proto_enumTypes[0]
}

func (x BubbleColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BubbleColor.Descriptor instead.
func (BubbleColor) EnumDescriptor() ([]byte, []int) {
	return file_chats_v2_user_chat_settings_model_proto_rawDescGZIP(), []int{0}
}

// User chat settings fields that are handled by KikIqUserProfile but aren't part of Personas
type UserChatSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only used by iPhone. Determines whether the client sees preview messages of text as part of a push notification
	PushPreviewEnabled bool `protobuf:"varint,1,opt,name=push_preview_enabled,json=pushPreviewEnabled,proto3" json:"push_preview_enabled,omitempty"`
	// Determines whether notifications are shown when a user receives the first message in a new chat,
	// e.g. they receive a message from someone they haven't chatted with before.
	NotifyNewPeopleEnabled bool `protobuf:"varint,2,opt,name=notify_new_people_enabled,json=notifyNewPeopleEnabled,proto3" json:"notify_new_people_enabled,omitempty"`
	// Determines whether pressing the enter key on the phone sends the message being typed, or just inserts a newline
	// char instead
	EnterKeySendEnabled bool `protobuf:"varint,3,opt,name=enter_key_send_enabled,json=enterKeySendEnabled,proto3" json:"enter_key_send_enabled,omitempty"`
	// The colour of chat bubbles in the app. This list of colours is copied from the mobile protobuf at
	// https://github.com/sokkit-io/xdata-model/blob/master/src/main/proto/xuserpreferences.proto
	ChatBubbleColor BubbleColor `protobuf:"varint,4,opt,name=chat_bubble_color,json=chatBubbleColor,proto3,enum=common.chats.v2.BubbleColor" json:"chat_bubble_color,omitempty"`
}

func (x *UserChatSettings) Reset() {
	*x = UserChatSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chats_v2_user_chat_settings_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChatSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChatSettings) ProtoMessage() {}

func (x *UserChatSettings) ProtoReflect() protoreflect.Message {
	mi := &file_chats_v2_user_chat_settings_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChatSettings.ProtoReflect.Descriptor instead.
func (*UserChatSettings) Descriptor() ([]byte, []int) {
	return file_chats_v2_user_chat_settings_model_proto_rawDescGZIP(), []int{0}
}

func (x *UserChatSettings) GetPushPreviewEnabled() bool {
	if x != nil {
		return x.PushPreviewEnabled
	}
	return false
}

func (x *UserChatSettings) GetNotifyNewPeopleEnabled() bool {
	if x != nil {
		return x.NotifyNewPeopleEnabled
	}
	return false
}

func (x *UserChatSettings) GetEnterKeySendEnabled() bool {
	if x != nil {
		return x.EnterKeySendEnabled
	}
	return false
}

func (x *UserChatSettings) GetChatBubbleColor() BubbleColor {
	if x != nil {
		return x.ChatBubbleColor
	}
	return BubbleColor_COLOR_BRIGHT_RED
}

var File_chats_v2_user_chat_settings_model_proto protoreflect.FileDescriptor

var file_chats_v2_user_chat_settings_model_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x22, 0xfe, 0x01, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x70,
	0x75, 0x73, 0x68, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x39, 0x0a, 0x19, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6e, 0x65, 0x77, 0x5f,
	0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x16,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x48, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x42,
	0x75, 0x62, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x74,
	0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2a, 0xec, 0x05, 0x0a, 0x0b,
	0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x52, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x47, 0x48,
	0x54, 0x5f, 0x50, 0x49, 0x4e, 0x4b, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4c, 0x4f,
	0x52, 0x5f, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x47,
	0x48, 0x54, 0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x45, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x43,
	0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45,
	0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x47,
	0x48, 0x54, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f,
	0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4b, 0x49, 0x4b, 0x5f, 0x47,
	0x52, 0x45, 0x45, 0x4e, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f,
	0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x07, 0x12,
	0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f,
	0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4c, 0x4f,
	0x52, 0x5f, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x10, 0x09,
	0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54,
	0x5f, 0x47, 0x52, 0x45, 0x59, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4c, 0x4f, 0x52,
	0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x50, 0x49, 0x4e, 0x4b,
	0x10, 0x0c, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47, 0x48,
	0x54, 0x5f, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x41, 0x10, 0x0d, 0x12, 0x16, 0x0a, 0x12, 0x43,
	0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x45,
	0x54, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47,
	0x48, 0x54, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4c,
	0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x41, 0x51, 0x55, 0x41, 0x10, 0x10, 0x12,
	0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4b,
	0x49, 0x4b, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x11, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f,
	0x4c, 0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57,
	0x10, 0x12, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47, 0x48,
	0x54, 0x5f, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f,
	0x4c, 0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x10,
	0x14, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54,
	0x5f, 0x47, 0x52, 0x45, 0x59, 0x10, 0x15, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4c, 0x4f, 0x52,
	0x5f, 0x43, 0x48, 0x45, 0x52, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x16, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x52, 0x4f, 0x53, 0x45, 0x5f, 0x50, 0x49, 0x4e, 0x4b,
	0x10, 0x17, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x50, 0x4c, 0x55, 0x4d,
	0x10, 0x18, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4e, 0x41, 0x56, 0x59,
	0x10, 0x19, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x41, 0x52, 0x4d, 0x59,
	0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x1a, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4c, 0x4f,
	0x52, 0x5f, 0x41, 0x56, 0x4f, 0x43, 0x41, 0x44, 0x4f, 0x10, 0x1b, 0x12, 0x0f, 0x0a, 0x0b, 0x43,
	0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x47, 0x4f, 0x10, 0x1c, 0x12, 0x11, 0x0a, 0x0d,
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x50, 0x55, 0x4d, 0x50, 0x4b, 0x49, 0x4e, 0x10, 0x1d, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x42, 0x52,
	0x4f, 0x57, 0x4e, 0x10, 0x1e, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x45,
	0x47, 0x47, 0x50, 0x4c, 0x41, 0x4e, 0x54, 0x10, 0x1f, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4c,
	0x4f, 0x52, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x20, 0x42, 0x5d, 0x0a, 0x14, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e,
	0x76, 0x32, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x6f, 0x6b, 0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73,
	0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x73,
	0x2f, 0x76, 0x32, 0x3b, 0x63, 0x68, 0x61, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_chats_v2_user_chat_settings_model_proto_rawDescOnce sync.Once
	file_chats_v2_user_chat_settings_model_proto_rawDescData = file_chats_v2_user_chat_settings_model_proto_rawDesc
)

func file_chats_v2_user_chat_settings_model_proto_rawDescGZIP() []byte {
	file_chats_v2_user_chat_settings_model_proto_rawDescOnce.Do(func() {
		file_chats_v2_user_chat_settings_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_chats_v2_user_chat_settings_model_proto_rawDescData)
	})
	return file_chats_v2_user_chat_settings_model_proto_rawDescData
}

var file_chats_v2_user_chat_settings_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chats_v2_user_chat_settings_model_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chats_v2_user_chat_settings_model_proto_goTypes = []interface{}{
	(BubbleColor)(0),         // 0: common.chats.v2.BubbleColor
	(*UserChatSettings)(nil), // 1: common.chats.v2.UserChatSettings
}
var file_chats_v2_user_chat_settings_model_proto_depIdxs = []int32{
	0, // 0: common.chats.v2.UserChatSettings.chat_bubble_color:type_name -> common.chats.v2.BubbleColor
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chats_v2_user_chat_settings_model_proto_init() }
func file_chats_v2_user_chat_settings_model_proto_init() {
	if File_chats_v2_user_chat_settings_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chats_v2_user_chat_settings_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChatSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chats_v2_user_chat_settings_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chats_v2_user_chat_settings_model_proto_goTypes,
		DependencyIndexes: file_chats_v2_user_chat_settings_model_proto_depIdxs,
		EnumInfos:         file_chats_v2_user_chat_settings_model_proto_enumTypes,
		MessageInfos:      file_chats_v2_user_chat_settings_model_proto_msgTypes,
	}.Build()
	File_chats_v2_user_chat_settings_model_proto = out.File
	file_chats_v2_user_chat_settings_model_proto_rawDesc = nil
	file_chats_v2_user_chat_settings_model_proto_goTypes = nil
	file_chats_v2_user_chat_settings_model_proto_depIdxs = nil
}
