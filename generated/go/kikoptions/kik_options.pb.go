// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: kik_options.proto

package kikoptions

import (
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// These options allow files to be exempt from specific checkstyle rules.
//
//	They should only be used in extreme circumstances,
//	when the proto file cannot or should not follow checkstyle conventions
type CheckStyleOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Exempts file from having a directory path that matches the package name of a proto file
	IgnorePath *bool `protobuf:"varint,1,opt,name=ignore_path,json=ignorePath,def=0" json:"ignore_path,omitempty"`
	// Exempts file from having a version for the proto file
	IgnoreVersion *bool `protobuf:"varint,2,opt,name=ignore_version,json=ignoreVersion,def=0" json:"ignore_version,omitempty"`
	// Exempts file from having the package prefix of its package (such as common, mobile, internal, etc)
	IgnorePackagePrefix *bool `protobuf:"varint,3,opt,name=ignore_package_prefix,json=ignorePackagePrefix,def=0" json:"ignore_package_prefix,omitempty"`
}

// Default values for CheckStyleOptions fields.
const (
	Default_CheckStyleOptions_IgnorePath          = bool(false)
	Default_CheckStyleOptions_IgnoreVersion       = bool(false)
	Default_CheckStyleOptions_IgnorePackagePrefix = bool(false)
)

func (x *CheckStyleOptions) Reset() {
	*x = CheckStyleOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kik_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckStyleOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStyleOptions) ProtoMessage() {}

func (x *CheckStyleOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kik_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStyleOptions.ProtoReflect.Descriptor instead.
func (*CheckStyleOptions) Descriptor() ([]byte, []int) {
	return file_kik_options_proto_rawDescGZIP(), []int{0}
}

func (x *CheckStyleOptions) GetIgnorePath() bool {
	if x != nil && x.IgnorePath != nil {
		return *x.IgnorePath
	}
	return Default_CheckStyleOptions_IgnorePath
}

func (x *CheckStyleOptions) GetIgnoreVersion() bool {
	if x != nil && x.IgnoreVersion != nil {
		return *x.IgnoreVersion
	}
	return Default_CheckStyleOptions_IgnoreVersion
}

func (x *CheckStyleOptions) GetIgnorePackagePrefix() bool {
	if x != nil && x.IgnorePackagePrefix != nil {
		return *x.IgnorePackagePrefix
	}
	return Default_CheckStyleOptions_IgnorePackagePrefix
}

var file_kik_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.FileOptions)(nil),
		ExtensionType: (*CheckStyleOptions)(nil),
		Field:         86581,
		Name:          "kik.checkstyle",
		Tag:           "bytes,86581,opt,name=checkstyle",
		Filename:      "kik_options.proto",
	},
}

// Extension fields to descriptor.FileOptions.
var (
	// optional kik.CheckStyleOptions checkstyle = 86581;
	E_Checkstyle = &file_kik_options_proto_extTypes[0]
)

var File_kik_options_proto protoreflect.FileDescriptor

var file_kik_options_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6b, 0x69, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6b, 0x69, 0x6b, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x11, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x26, 0x0a, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0a, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x0e, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x15, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x13, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x3a, 0x56, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb5, 0xa4,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x5f, 0x0a, 0x0f, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5a, 0x4c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69, 0x74, 0x2d,
	0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x6b, 0x69, 0x6b, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b,
	0x6b, 0x69, 0x6b, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
}

var (
	file_kik_options_proto_rawDescOnce sync.Once
	file_kik_options_proto_rawDescData = file_kik_options_proto_rawDesc
)

func file_kik_options_proto_rawDescGZIP() []byte {
	file_kik_options_proto_rawDescOnce.Do(func() {
		file_kik_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_kik_options_proto_rawDescData)
	})
	return file_kik_options_proto_rawDescData
}

var file_kik_options_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_kik_options_proto_goTypes = []interface{}{
	(*CheckStyleOptions)(nil),      // 0: kik.CheckStyleOptions
	(*descriptor.FileOptions)(nil), // 1: google.protobuf.FileOptions
}
var file_kik_options_proto_depIdxs = []int32{
	1, // 0: kik.checkstyle:extendee -> google.protobuf.FileOptions
	0, // 1: kik.checkstyle:type_name -> kik.CheckStyleOptions
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	1, // [1:2] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kik_options_proto_init() }
func file_kik_options_proto_init() {
	if File_kik_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kik_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckStyleOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kik_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_kik_options_proto_goTypes,
		DependencyIndexes: file_kik_options_proto_depIdxs,
		MessageInfos:      file_kik_options_proto_msgTypes,
		ExtensionInfos:    file_kik_options_proto_extTypes,
	}.Build()
	File_kik_options_proto = out.File
	file_kik_options_proto_rawDesc = nil
	file_kik_options_proto_goTypes = nil
	file_kik_options_proto_depIdxs = nil
}
