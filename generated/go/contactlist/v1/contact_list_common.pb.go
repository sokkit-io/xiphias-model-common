// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: contactlist/v1/contact_list_common.proto

package contactlist

import (
	_go "github.com/sokkit-io/xiphias-model-common/generated/go"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserFriendContext_ContextType int32

const (
	UserFriendContext_DEFAULT                   UserFriendContext_ContextType = 0
	UserFriendContext_EXPLICIT_USERNAME_SEARCH  UserFriendContext_ContextType = 1
	UserFriendContext_INLINE_USERNAME_SEARCH    UserFriendContext_ContextType = 2
	UserFriendContext_INLINE_PROMOTED           UserFriendContext_ContextType = 3
	UserFriendContext_FUZZY_MATCHING            UserFriendContext_ContextType = 4
	UserFriendContext_ADDRESS_BOOK_MATCHING     UserFriendContext_ContextType = 5
	UserFriendContext_PROMOTED_CHATS_LIST       UserFriendContext_ContextType = 6
	UserFriendContext_TALK_TO_AD                UserFriendContext_ContextType = 7
	UserFriendContext_FIND_PEOPLE_AD            UserFriendContext_ContextType = 8
	UserFriendContext_GROUP_ADD_ALL             UserFriendContext_ContextType = 9
	UserFriendContext_GROUP_INFO_ADD            UserFriendContext_ContextType = 10
	UserFriendContext_WEB_KIK_ME                UserFriendContext_ContextType = 11
	UserFriendContext_WEB_PROFILE_KIK_ME        UserFriendContext_ContextType = 12
	UserFriendContext_CARD_PROFILE_KIK_PROTOCOL UserFriendContext_ContextType = 13
	UserFriendContext_CARD_SEND_KIK_TO_USER     UserFriendContext_ContextType = 14
	UserFriendContext_CARD_OPEN_CONVERSATION    UserFriendContext_ContextType = 15
	UserFriendContext_CARD_OPEN_PROFILE         UserFriendContext_ContextType = 16
	UserFriendContext_FRIEND_PICKER             UserFriendContext_ContextType = 17
	UserFriendContext_USERNAME_MENTION          UserFriendContext_ContextType = 18
	UserFriendContext_BOT_MENTION               UserFriendContext_ContextType = 19
	UserFriendContext_BOT_MENTION_REPLY         UserFriendContext_ContextType = 20
	UserFriendContext_BOT_SHOP                  UserFriendContext_ContextType = 21
	UserFriendContext_GROUP_MEMBER_ADD          UserFriendContext_ContextType = 22
	UserFriendContext_GROUP_INFO_MENU_ADD       UserFriendContext_ContextType = 23
	UserFriendContext_GROUP_MENU_ADD            UserFriendContext_ContextType = 24
	UserFriendContext_PULL_USERNAME_SEARCH      UserFriendContext_ContextType = 25
	UserFriendContext_SEND_TO_USERNAME_SEARCH   UserFriendContext_ContextType = 26
	UserFriendContext_LINK_ATTRIBUTION          UserFriendContext_ContextType = 27
	UserFriendContext_SUGGEST_FRIEND            UserFriendContext_ContextType = 28
)

// Enum value maps for UserFriendContext_ContextType.
var (
	UserFriendContext_ContextType_name = map[int32]string{
		0:  "DEFAULT",
		1:  "EXPLICIT_USERNAME_SEARCH",
		2:  "INLINE_USERNAME_SEARCH",
		3:  "INLINE_PROMOTED",
		4:  "FUZZY_MATCHING",
		5:  "ADDRESS_BOOK_MATCHING",
		6:  "PROMOTED_CHATS_LIST",
		7:  "TALK_TO_AD",
		8:  "FIND_PEOPLE_AD",
		9:  "GROUP_ADD_ALL",
		10: "GROUP_INFO_ADD",
		11: "WEB_KIK_ME",
		12: "WEB_PROFILE_KIK_ME",
		13: "CARD_PROFILE_KIK_PROTOCOL",
		14: "CARD_SEND_KIK_TO_USER",
		15: "CARD_OPEN_CONVERSATION",
		16: "CARD_OPEN_PROFILE",
		17: "FRIEND_PICKER",
		18: "USERNAME_MENTION",
		19: "BOT_MENTION",
		20: "BOT_MENTION_REPLY",
		21: "BOT_SHOP",
		22: "GROUP_MEMBER_ADD",
		23: "GROUP_INFO_MENU_ADD",
		24: "GROUP_MENU_ADD",
		25: "PULL_USERNAME_SEARCH",
		26: "SEND_TO_USERNAME_SEARCH",
		27: "LINK_ATTRIBUTION",
		28: "SUGGEST_FRIEND",
	}
	UserFriendContext_ContextType_value = map[string]int32{
		"DEFAULT":                   0,
		"EXPLICIT_USERNAME_SEARCH":  1,
		"INLINE_USERNAME_SEARCH":    2,
		"INLINE_PROMOTED":           3,
		"FUZZY_MATCHING":            4,
		"ADDRESS_BOOK_MATCHING":     5,
		"PROMOTED_CHATS_LIST":       6,
		"TALK_TO_AD":                7,
		"FIND_PEOPLE_AD":            8,
		"GROUP_ADD_ALL":             9,
		"GROUP_INFO_ADD":            10,
		"WEB_KIK_ME":                11,
		"WEB_PROFILE_KIK_ME":        12,
		"CARD_PROFILE_KIK_PROTOCOL": 13,
		"CARD_SEND_KIK_TO_USER":     14,
		"CARD_OPEN_CONVERSATION":    15,
		"CARD_OPEN_PROFILE":         16,
		"FRIEND_PICKER":             17,
		"USERNAME_MENTION":          18,
		"BOT_MENTION":               19,
		"BOT_MENTION_REPLY":         20,
		"BOT_SHOP":                  21,
		"GROUP_MEMBER_ADD":          22,
		"GROUP_INFO_MENU_ADD":       23,
		"GROUP_MENU_ADD":            24,
		"PULL_USERNAME_SEARCH":      25,
		"SEND_TO_USERNAME_SEARCH":   26,
		"LINK_ATTRIBUTION":          27,
		"SUGGEST_FRIEND":            28,
	}
)

func (x UserFriendContext_ContextType) Enum() *UserFriendContext_ContextType {
	p := new(UserFriendContext_ContextType)
	*p = x
	return p
}

func (x UserFriendContext_ContextType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserFriendContext_ContextType) Descriptor() protoreflect.EnumDescriptor {
	return file_contactlist_v1_contact_list_common_proto_enumTypes[0].Descriptor()
}

func (UserFriendContext_ContextType) Type() protoreflect.EnumType {
	return &file_contactlist_v1_contact_list_common_proto_enumTypes[0]
}

func (x UserFriendContext_ContextType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserFriendContext_ContextType.Descriptor instead.
func (UserFriendContext_ContextType) EnumDescriptor() ([]byte, []int) {
	return file_contactlist_v1_contact_list_common_proto_rawDescGZIP(), []int{2, 0}
}

// A Key, defining a user/entity pair which have some form of relationship.
type UserRelationKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Relationship Owner - i.e. the user which is maintiaining the relationship
	RelationOwner *_go.XiBareUserJid `protobuf:"bytes,1,opt,name=relation_owner,json=relationOwner,proto3" json:"relation_owner,omitempty"`
	// Related Entity - the entity for which the relation_owner is related somehow
	RelationMember *UserRelationMemberKey `protobuf:"bytes,2,opt,name=relation_member,json=relationMember,proto3" json:"relation_member,omitempty"`
}

func (x *UserRelationKey) Reset() {
	*x = UserRelationKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v1_contact_list_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRelationKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRelationKey) ProtoMessage() {}

func (x *UserRelationKey) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v1_contact_list_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRelationKey.ProtoReflect.Descriptor instead.
func (*UserRelationKey) Descriptor() ([]byte, []int) {
	return file_contactlist_v1_contact_list_common_proto_rawDescGZIP(), []int{0}
}

func (x *UserRelationKey) GetRelationOwner() *_go.XiBareUserJid {
	if x != nil {
		return x.RelationOwner
	}
	return nil
}

func (x *UserRelationKey) GetRelationMember() *UserRelationMemberKey {
	if x != nil {
		return x.RelationMember
	}
	return nil
}

// A User Relation Member - contains the details about the thing a user is/can be related to
type UserRelationMemberKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MemberKind:
	//	*UserRelationMemberKey_UserJid
	//	*UserRelationMemberKey_GroupJid
	MemberKind isUserRelationMemberKey_MemberKind `protobuf_oneof:"member_kind"`
}

func (x *UserRelationMemberKey) Reset() {
	*x = UserRelationMemberKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v1_contact_list_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRelationMemberKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRelationMemberKey) ProtoMessage() {}

func (x *UserRelationMemberKey) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v1_contact_list_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRelationMemberKey.ProtoReflect.Descriptor instead.
func (*UserRelationMemberKey) Descriptor() ([]byte, []int) {
	return file_contactlist_v1_contact_list_common_proto_rawDescGZIP(), []int{1}
}

func (m *UserRelationMemberKey) GetMemberKind() isUserRelationMemberKey_MemberKind {
	if m != nil {
		return m.MemberKind
	}
	return nil
}

func (x *UserRelationMemberKey) GetUserJid() *_go.XiBareUserJid {
	if x, ok := x.GetMemberKind().(*UserRelationMemberKey_UserJid); ok {
		return x.UserJid
	}
	return nil
}

func (x *UserRelationMemberKey) GetGroupJid() *_go.XiGroupJid {
	if x, ok := x.GetMemberKind().(*UserRelationMemberKey_GroupJid); ok {
		return x.GroupJid
	}
	return nil
}

type isUserRelationMemberKey_MemberKind interface {
	isUserRelationMemberKey_MemberKind()
}

type UserRelationMemberKey_UserJid struct {
	UserJid *_go.XiBareUserJid `protobuf:"bytes,1,opt,name=user_jid,json=userJid,proto3,oneof"`
}

type UserRelationMemberKey_GroupJid struct {
	GroupJid *_go.XiGroupJid `protobuf:"bytes,2,opt,name=group_jid,json=groupJid,proto3,oneof"`
}

func (*UserRelationMemberKey_UserJid) isUserRelationMemberKey_MemberKind() {}

func (*UserRelationMemberKey_GroupJid) isUserRelationMemberKey_MemberKind() {}

// Context Details for a user's friendship with another entity (eg: other user/group)
type UserFriendContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The context of the relationship - i.e. how the user found the other / how the user was found
	// This value must be one of the values from com.kik.plugin.FriendContextType in kik-server.
	// NOTE: NOT modeling this as an enum due to the difficulty involved in adding new types to the list.
	ContextTypeStr string `protobuf:"bytes,5,opt,name=context_type_str,json=contextTypeStr,proto3" json:"context_type_str,omitempty"`
	// DEPRECATED. context type - migrating to string context_type_str
	ContextType UserFriendContext_ContextType `protobuf:"varint,1,opt,name=context_type,json=contextType,proto3,enum=common.contactlist.v1.UserFriendContext_ContextType" json:"context_type,omitempty"`
	// Optional card name when the context type refers to a card case
	RelatedCardName string `protobuf:"bytes,2,opt,name=related_card_name,json=relatedCardName,proto3" json:"related_card_name,omitempty"`
	// Optional URL when the context type refers to web/card cases
	RelatedUrl string `protobuf:"bytes,3,opt,name=related_url,json=relatedUrl,proto3" json:"related_url,omitempty"`
	// Optional Group ID when the context type refers to a group case
	RelatedGroup *_go.XiGroupJid `protobuf:"bytes,4,opt,name=related_group,json=relatedGroup,proto3" json:"related_group,omitempty"`
}

func (x *UserFriendContext) Reset() {
	*x = UserFriendContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v1_contact_list_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext) ProtoMessage() {}

func (x *UserFriendContext) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v1_contact_list_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext.ProtoReflect.Descriptor instead.
func (*UserFriendContext) Descriptor() ([]byte, []int) {
	return file_contactlist_v1_contact_list_common_proto_rawDescGZIP(), []int{2}
}

func (x *UserFriendContext) GetContextTypeStr() string {
	if x != nil {
		return x.ContextTypeStr
	}
	return ""
}

func (x *UserFriendContext) GetContextType() UserFriendContext_ContextType {
	if x != nil {
		return x.ContextType
	}
	return UserFriendContext_DEFAULT
}

func (x *UserFriendContext) GetRelatedCardName() string {
	if x != nil {
		return x.RelatedCardName
	}
	return ""
}

func (x *UserFriendContext) GetRelatedUrl() string {
	if x != nil {
		return x.RelatedUrl
	}
	return ""
}

func (x *UserFriendContext) GetRelatedGroup() *_go.XiGroupJid {
	if x != nil {
		return x.RelatedGroup
	}
	return nil
}

var File_contactlist_v1_contact_list_common_proto protoreflect.FileDescriptor

var file_contactlist_v1_contact_list_common_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xae, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4a, 0x69, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4a, 0x69, 0x64, 0x48, 0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x12,
	0x31, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x48, 0x00, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4a,
	0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x22, 0xce, 0x07, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x31, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xca, 0x9d, 0x25, 0x03, 0x30, 0xc8, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x12, 0x57, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xca, 0x9d, 0x25, 0x03, 0x30, 0x80, 0x28, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca,
	0x9d, 0x25, 0x03, 0x30, 0x88, 0x27, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55,
	0x72, 0x6c, 0x12, 0x37, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x52, 0x0c, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x94, 0x05, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x58, 0x50, 0x4c,
	0x49, 0x43, 0x49, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x45,
	0x41, 0x52, 0x43, 0x48, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x4d, 0x4f, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x55, 0x5a, 0x5a, 0x59,
	0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x41,
	0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4d, 0x41, 0x54, 0x43,
	0x48, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54,
	0x45, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x06, 0x12,
	0x0e, 0x0a, 0x0a, 0x54, 0x41, 0x4c, 0x4b, 0x5f, 0x54, 0x4f, 0x5f, 0x41, 0x44, 0x10, 0x07, 0x12,
	0x12, 0x0a, 0x0e, 0x46, 0x49, 0x4e, 0x44, 0x5f, 0x50, 0x45, 0x4f, 0x50, 0x4c, 0x45, 0x5f, 0x41,
	0x44, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x41, 0x44, 0x44,
	0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x45,
	0x42, 0x5f, 0x4b, 0x49, 0x4b, 0x5f, 0x4d, 0x45, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x57, 0x45,
	0x42, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4b, 0x49, 0x4b, 0x5f, 0x4d, 0x45,
	0x10, 0x0c, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49,
	0x4c, 0x45, 0x5f, 0x4b, 0x49, 0x4b, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x10,
	0x0d, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4b,
	0x49, 0x4b, 0x5f, 0x54, 0x4f, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x0e, 0x12, 0x1a, 0x0a, 0x16,
	0x43, 0x41, 0x52, 0x44, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52,
	0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0f, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x52, 0x44,
	0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x10, 0x12,
	0x11, 0x0a, 0x0d, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x45, 0x52,
	0x10, 0x11, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4d,
	0x45, 0x4e, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x12, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4f, 0x54, 0x5f,
	0x4d, 0x45, 0x4e, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x54,
	0x5f, 0x4d, 0x45, 0x4e, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x14,
	0x12, 0x0c, 0x0a, 0x08, 0x42, 0x4f, 0x54, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x10, 0x15, 0x12, 0x14,
	0x0a, 0x10, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x41,
	0x44, 0x44, 0x10, 0x16, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x17, 0x12, 0x12, 0x0a,
	0x0e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x41, 0x44, 0x44, 0x10,
	0x18, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x19, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x45, 0x4e, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x1a, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x49, 0x4e, 0x4b,
	0x5f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x1b, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x55, 0x47, 0x47, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44,
	0x10, 0x1c, 0x42, 0x7a, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x6f, 0x6b, 0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73,
	0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0xa0, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x43, 0x4e, 0x4c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contactlist_v1_contact_list_common_proto_rawDescOnce sync.Once
	file_contactlist_v1_contact_list_common_proto_rawDescData = file_contactlist_v1_contact_list_common_proto_rawDesc
)

func file_contactlist_v1_contact_list_common_proto_rawDescGZIP() []byte {
	file_contactlist_v1_contact_list_common_proto_rawDescOnce.Do(func() {
		file_contactlist_v1_contact_list_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_contactlist_v1_contact_list_common_proto_rawDescData)
	})
	return file_contactlist_v1_contact_list_common_proto_rawDescData
}

var file_contactlist_v1_contact_list_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contactlist_v1_contact_list_common_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_contactlist_v1_contact_list_common_proto_goTypes = []interface{}{
	(UserFriendContext_ContextType)(0), // 0: common.contactlist.v1.UserFriendContext.ContextType
	(*UserRelationKey)(nil),            // 1: common.contactlist.v1.UserRelationKey
	(*UserRelationMemberKey)(nil),      // 2: common.contactlist.v1.UserRelationMemberKey
	(*UserFriendContext)(nil),          // 3: common.contactlist.v1.UserFriendContext
	(*_go.XiBareUserJid)(nil),          // 4: common.XiBareUserJid
	(*_go.XiGroupJid)(nil),             // 5: common.XiGroupJid
}
var file_contactlist_v1_contact_list_common_proto_depIdxs = []int32{
	4, // 0: common.contactlist.v1.UserRelationKey.relation_owner:type_name -> common.XiBareUserJid
	2, // 1: common.contactlist.v1.UserRelationKey.relation_member:type_name -> common.contactlist.v1.UserRelationMemberKey
	4, // 2: common.contactlist.v1.UserRelationMemberKey.user_jid:type_name -> common.XiBareUserJid
	5, // 3: common.contactlist.v1.UserRelationMemberKey.group_jid:type_name -> common.XiGroupJid
	0, // 4: common.contactlist.v1.UserFriendContext.context_type:type_name -> common.contactlist.v1.UserFriendContext.ContextType
	5, // 5: common.contactlist.v1.UserFriendContext.related_group:type_name -> common.XiGroupJid
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_contactlist_v1_contact_list_common_proto_init() }
func file_contactlist_v1_contact_list_common_proto_init() {
	if File_contactlist_v1_contact_list_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contactlist_v1_contact_list_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRelationKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v1_contact_list_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRelationMemberKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v1_contact_list_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_contactlist_v1_contact_list_common_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*UserRelationMemberKey_UserJid)(nil),
		(*UserRelationMemberKey_GroupJid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contactlist_v1_contact_list_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contactlist_v1_contact_list_common_proto_goTypes,
		DependencyIndexes: file_contactlist_v1_contact_list_common_proto_depIdxs,
		EnumInfos:         file_contactlist_v1_contact_list_common_proto_enumTypes,
		MessageInfos:      file_contactlist_v1_contact_list_common_proto_msgTypes,
	}.Build()
	File_contactlist_v1_contact_list_common_proto = out.File
	file_contactlist_v1_contact_list_common_proto_rawDesc = nil
	file_contactlist_v1_contact_list_common_proto_goTypes = nil
	file_contactlist_v1_contact_list_common_proto_depIdxs = nil
}
