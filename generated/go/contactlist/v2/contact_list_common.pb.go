// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: contactlist/v2/contact_list_common.proto

package contactlist

import (
	v2 "github.com/sokkit-io/xiphias-model-common/generated/go/common/v2"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Context Details for a user's friendship with another entity (eg: other user/group)
type UserFriendContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The context of the relationship - i.e. how the user found the other / how the user was found
	// This is sourced from com.kik.plugin.FriendContextExtended in kik-server,
	// but branched off to support:
	// https://github.com/sokkit-io/xiphias-api-mobile/blob/master/proto/contactlist/v2/contactlist_service.proto
	//
	// Types that are assignable to ContextKind:
	//	*UserFriendContext_Default
	//	*UserFriendContext_Scan_
	//	*UserFriendContext_ExplicitUsernameSearch_
	//	*UserFriendContext_InlineUsernameSearch_
	//	*UserFriendContext_InlinePromoted_
	//	*UserFriendContext_FuzzyMatching_
	//	*UserFriendContext_AddressBookMatching_
	//	*UserFriendContext_PromotedChatsList_
	//	*UserFriendContext_TalkToAd_
	//	*UserFriendContext_FindPeopleAd_
	//	*UserFriendContext_GroupAddAll_
	//	*UserFriendContext_GroupInfoAdd_
	//	*UserFriendContext_WebKikMe_
	//	*UserFriendContext_WebProfileKikMe_
	//	*UserFriendContext_CardProfileKikProtocol_
	//	*UserFriendContext_CardSendKikToUser_
	//	*UserFriendContext_CardOpenConversation_
	//	*UserFriendContext_CardOpenProfile_
	//	*UserFriendContext_FriendPicker_
	//	*UserFriendContext_UsernameMention_
	//	*UserFriendContext_BotMention_
	//	*UserFriendContext_BotMentionReply_
	//	*UserFriendContext_BotShop_
	//	*UserFriendContext_GroupMemberAdd_
	//	*UserFriendContext_GroupInfoMenuAdd_
	//	*UserFriendContext_GroupMenuAdd_
	//	*UserFriendContext_PullUsernameSearch_
	//	*UserFriendContext_SendToUsernameSearch_
	//	*UserFriendContext_LinkAttribution_
	//	*UserFriendContext_SuggestFriend_
	ContextKind isUserFriendContext_ContextKind `protobuf_oneof:"context_kind"`
}

func (x *UserFriendContext) Reset() {
	*x = UserFriendContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext) ProtoMessage() {}

func (x *UserFriendContext) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext.ProtoReflect.Descriptor instead.
func (*UserFriendContext) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0}
}

func (m *UserFriendContext) GetContextKind() isUserFriendContext_ContextKind {
	if m != nil {
		return m.ContextKind
	}
	return nil
}

func (x *UserFriendContext) GetDefault() *UserFriendContext_DefaultContext {
	if x, ok := x.GetContextKind().(*UserFriendContext_Default); ok {
		return x.Default
	}
	return nil
}

func (x *UserFriendContext) GetScan() *UserFriendContext_Scan {
	if x, ok := x.GetContextKind().(*UserFriendContext_Scan_); ok {
		return x.Scan
	}
	return nil
}

func (x *UserFriendContext) GetExplicitUsernameSearch() *UserFriendContext_ExplicitUsernameSearch {
	if x, ok := x.GetContextKind().(*UserFriendContext_ExplicitUsernameSearch_); ok {
		return x.ExplicitUsernameSearch
	}
	return nil
}

func (x *UserFriendContext) GetInlineUsernameSearch() *UserFriendContext_InlineUsernameSearch {
	if x, ok := x.GetContextKind().(*UserFriendContext_InlineUsernameSearch_); ok {
		return x.InlineUsernameSearch
	}
	return nil
}

func (x *UserFriendContext) GetInlinePromoted() *UserFriendContext_InlinePromoted {
	if x, ok := x.GetContextKind().(*UserFriendContext_InlinePromoted_); ok {
		return x.InlinePromoted
	}
	return nil
}

func (x *UserFriendContext) GetFuzzyMatching() *UserFriendContext_FuzzyMatching {
	if x, ok := x.GetContextKind().(*UserFriendContext_FuzzyMatching_); ok {
		return x.FuzzyMatching
	}
	return nil
}

func (x *UserFriendContext) GetAddressBookMatching() *UserFriendContext_AddressBookMatching {
	if x, ok := x.GetContextKind().(*UserFriendContext_AddressBookMatching_); ok {
		return x.AddressBookMatching
	}
	return nil
}

func (x *UserFriendContext) GetPromotedChatsList() *UserFriendContext_PromotedChatsList {
	if x, ok := x.GetContextKind().(*UserFriendContext_PromotedChatsList_); ok {
		return x.PromotedChatsList
	}
	return nil
}

func (x *UserFriendContext) GetTalkToAd() *UserFriendContext_TalkToAd {
	if x, ok := x.GetContextKind().(*UserFriendContext_TalkToAd_); ok {
		return x.TalkToAd
	}
	return nil
}

func (x *UserFriendContext) GetFindPeopleAd() *UserFriendContext_FindPeopleAd {
	if x, ok := x.GetContextKind().(*UserFriendContext_FindPeopleAd_); ok {
		return x.FindPeopleAd
	}
	return nil
}

func (x *UserFriendContext) GetGroupAddAll() *UserFriendContext_GroupAddAll {
	if x, ok := x.GetContextKind().(*UserFriendContext_GroupAddAll_); ok {
		return x.GroupAddAll
	}
	return nil
}

func (x *UserFriendContext) GetGroupInfoAdd() *UserFriendContext_GroupInfoAdd {
	if x, ok := x.GetContextKind().(*UserFriendContext_GroupInfoAdd_); ok {
		return x.GroupInfoAdd
	}
	return nil
}

func (x *UserFriendContext) GetWebKikMe() *UserFriendContext_WebKikMe {
	if x, ok := x.GetContextKind().(*UserFriendContext_WebKikMe_); ok {
		return x.WebKikMe
	}
	return nil
}

func (x *UserFriendContext) GetWebProfileKikMe() *UserFriendContext_WebProfileKikMe {
	if x, ok := x.GetContextKind().(*UserFriendContext_WebProfileKikMe_); ok {
		return x.WebProfileKikMe
	}
	return nil
}

func (x *UserFriendContext) GetCardProfileKikProtocol() *UserFriendContext_CardProfileKikProtocol {
	if x, ok := x.GetContextKind().(*UserFriendContext_CardProfileKikProtocol_); ok {
		return x.CardProfileKikProtocol
	}
	return nil
}

func (x *UserFriendContext) GetCardSendKikToUser() *UserFriendContext_CardSendKikToUser {
	if x, ok := x.GetContextKind().(*UserFriendContext_CardSendKikToUser_); ok {
		return x.CardSendKikToUser
	}
	return nil
}

func (x *UserFriendContext) GetCardOpenConversation() *UserFriendContext_CardOpenConversation {
	if x, ok := x.GetContextKind().(*UserFriendContext_CardOpenConversation_); ok {
		return x.CardOpenConversation
	}
	return nil
}

func (x *UserFriendContext) GetCardOpenProfile() *UserFriendContext_CardOpenProfile {
	if x, ok := x.GetContextKind().(*UserFriendContext_CardOpenProfile_); ok {
		return x.CardOpenProfile
	}
	return nil
}

func (x *UserFriendContext) GetFriendPicker() *UserFriendContext_FriendPicker {
	if x, ok := x.GetContextKind().(*UserFriendContext_FriendPicker_); ok {
		return x.FriendPicker
	}
	return nil
}

func (x *UserFriendContext) GetUsernameMention() *UserFriendContext_UsernameMention {
	if x, ok := x.GetContextKind().(*UserFriendContext_UsernameMention_); ok {
		return x.UsernameMention
	}
	return nil
}

func (x *UserFriendContext) GetBotMention() *UserFriendContext_BotMention {
	if x, ok := x.GetContextKind().(*UserFriendContext_BotMention_); ok {
		return x.BotMention
	}
	return nil
}

func (x *UserFriendContext) GetBotMentionReply() *UserFriendContext_BotMentionReply {
	if x, ok := x.GetContextKind().(*UserFriendContext_BotMentionReply_); ok {
		return x.BotMentionReply
	}
	return nil
}

func (x *UserFriendContext) GetBotShop() *UserFriendContext_BotShop {
	if x, ok := x.GetContextKind().(*UserFriendContext_BotShop_); ok {
		return x.BotShop
	}
	return nil
}

func (x *UserFriendContext) GetGroupMemberAdd() *UserFriendContext_GroupMemberAdd {
	if x, ok := x.GetContextKind().(*UserFriendContext_GroupMemberAdd_); ok {
		return x.GroupMemberAdd
	}
	return nil
}

func (x *UserFriendContext) GetGroupInfoMenuAdd() *UserFriendContext_GroupInfoMenuAdd {
	if x, ok := x.GetContextKind().(*UserFriendContext_GroupInfoMenuAdd_); ok {
		return x.GroupInfoMenuAdd
	}
	return nil
}

func (x *UserFriendContext) GetGroupMenuAdd() *UserFriendContext_GroupMenuAdd {
	if x, ok := x.GetContextKind().(*UserFriendContext_GroupMenuAdd_); ok {
		return x.GroupMenuAdd
	}
	return nil
}

func (x *UserFriendContext) GetPullUsernameSearch() *UserFriendContext_PullUsernameSearch {
	if x, ok := x.GetContextKind().(*UserFriendContext_PullUsernameSearch_); ok {
		return x.PullUsernameSearch
	}
	return nil
}

func (x *UserFriendContext) GetSendToUsernameSearch() *UserFriendContext_SendToUsernameSearch {
	if x, ok := x.GetContextKind().(*UserFriendContext_SendToUsernameSearch_); ok {
		return x.SendToUsernameSearch
	}
	return nil
}

func (x *UserFriendContext) GetLinkAttribution() *UserFriendContext_LinkAttribution {
	if x, ok := x.GetContextKind().(*UserFriendContext_LinkAttribution_); ok {
		return x.LinkAttribution
	}
	return nil
}

func (x *UserFriendContext) GetSuggestFriend() *UserFriendContext_SuggestFriend {
	if x, ok := x.GetContextKind().(*UserFriendContext_SuggestFriend_); ok {
		return x.SuggestFriend
	}
	return nil
}

type isUserFriendContext_ContextKind interface {
	isUserFriendContext_ContextKind()
}

type UserFriendContext_Default struct {
	Default *UserFriendContext_DefaultContext `protobuf:"bytes,1,opt,name=default,proto3,oneof"`
}

type UserFriendContext_Scan_ struct {
	Scan *UserFriendContext_Scan `protobuf:"bytes,2,opt,name=scan,proto3,oneof"`
}

type UserFriendContext_ExplicitUsernameSearch_ struct {
	ExplicitUsernameSearch *UserFriendContext_ExplicitUsernameSearch `protobuf:"bytes,3,opt,name=explicit_username_search,json=explicitUsernameSearch,proto3,oneof"`
}

type UserFriendContext_InlineUsernameSearch_ struct {
	InlineUsernameSearch *UserFriendContext_InlineUsernameSearch `protobuf:"bytes,4,opt,name=inline_username_search,json=inlineUsernameSearch,proto3,oneof"`
}

type UserFriendContext_InlinePromoted_ struct {
	InlinePromoted *UserFriendContext_InlinePromoted `protobuf:"bytes,5,opt,name=inline_promoted,json=inlinePromoted,proto3,oneof"`
}

type UserFriendContext_FuzzyMatching_ struct {
	FuzzyMatching *UserFriendContext_FuzzyMatching `protobuf:"bytes,6,opt,name=fuzzy_matching,json=fuzzyMatching,proto3,oneof"`
}

type UserFriendContext_AddressBookMatching_ struct {
	AddressBookMatching *UserFriendContext_AddressBookMatching `protobuf:"bytes,7,opt,name=address_book_matching,json=addressBookMatching,proto3,oneof"`
}

type UserFriendContext_PromotedChatsList_ struct {
	PromotedChatsList *UserFriendContext_PromotedChatsList `protobuf:"bytes,8,opt,name=promoted_chats_list,json=promotedChatsList,proto3,oneof"`
}

type UserFriendContext_TalkToAd_ struct {
	TalkToAd *UserFriendContext_TalkToAd `protobuf:"bytes,9,opt,name=talk_to_ad,json=talkToAd,proto3,oneof"`
}

type UserFriendContext_FindPeopleAd_ struct {
	FindPeopleAd *UserFriendContext_FindPeopleAd `protobuf:"bytes,10,opt,name=find_people_ad,json=findPeopleAd,proto3,oneof"`
}

type UserFriendContext_GroupAddAll_ struct {
	GroupAddAll *UserFriendContext_GroupAddAll `protobuf:"bytes,11,opt,name=group_add_all,json=groupAddAll,proto3,oneof"`
}

type UserFriendContext_GroupInfoAdd_ struct {
	GroupInfoAdd *UserFriendContext_GroupInfoAdd `protobuf:"bytes,12,opt,name=group_info_add,json=groupInfoAdd,proto3,oneof"`
}

type UserFriendContext_WebKikMe_ struct {
	WebKikMe *UserFriendContext_WebKikMe `protobuf:"bytes,13,opt,name=web_kik_me,json=webKikMe,proto3,oneof"`
}

type UserFriendContext_WebProfileKikMe_ struct {
	WebProfileKikMe *UserFriendContext_WebProfileKikMe `protobuf:"bytes,14,opt,name=web_profile_kik_me,json=webProfileKikMe,proto3,oneof"`
}

type UserFriendContext_CardProfileKikProtocol_ struct {
	CardProfileKikProtocol *UserFriendContext_CardProfileKikProtocol `protobuf:"bytes,15,opt,name=card_profile_kik_protocol,json=cardProfileKikProtocol,proto3,oneof"`
}

type UserFriendContext_CardSendKikToUser_ struct {
	CardSendKikToUser *UserFriendContext_CardSendKikToUser `protobuf:"bytes,16,opt,name=card_send_kik_to_user,json=cardSendKikToUser,proto3,oneof"`
}

type UserFriendContext_CardOpenConversation_ struct {
	CardOpenConversation *UserFriendContext_CardOpenConversation `protobuf:"bytes,17,opt,name=card_open_conversation,json=cardOpenConversation,proto3,oneof"`
}

type UserFriendContext_CardOpenProfile_ struct {
	CardOpenProfile *UserFriendContext_CardOpenProfile `protobuf:"bytes,18,opt,name=card_open_profile,json=cardOpenProfile,proto3,oneof"`
}

type UserFriendContext_FriendPicker_ struct {
	FriendPicker *UserFriendContext_FriendPicker `protobuf:"bytes,19,opt,name=friend_picker,json=friendPicker,proto3,oneof"`
}

type UserFriendContext_UsernameMention_ struct {
	UsernameMention *UserFriendContext_UsernameMention `protobuf:"bytes,20,opt,name=username_mention,json=usernameMention,proto3,oneof"`
}

type UserFriendContext_BotMention_ struct {
	BotMention *UserFriendContext_BotMention `protobuf:"bytes,21,opt,name=bot_mention,json=botMention,proto3,oneof"`
}

type UserFriendContext_BotMentionReply_ struct {
	BotMentionReply *UserFriendContext_BotMentionReply `protobuf:"bytes,22,opt,name=bot_mention_reply,json=botMentionReply,proto3,oneof"`
}

type UserFriendContext_BotShop_ struct {
	BotShop *UserFriendContext_BotShop `protobuf:"bytes,23,opt,name=bot_shop,json=botShop,proto3,oneof"`
}

type UserFriendContext_GroupMemberAdd_ struct {
	GroupMemberAdd *UserFriendContext_GroupMemberAdd `protobuf:"bytes,24,opt,name=group_member_add,json=groupMemberAdd,proto3,oneof"`
}

type UserFriendContext_GroupInfoMenuAdd_ struct {
	GroupInfoMenuAdd *UserFriendContext_GroupInfoMenuAdd `protobuf:"bytes,25,opt,name=group_info_menu_add,json=groupInfoMenuAdd,proto3,oneof"`
}

type UserFriendContext_GroupMenuAdd_ struct {
	GroupMenuAdd *UserFriendContext_GroupMenuAdd `protobuf:"bytes,26,opt,name=group_menu_add,json=groupMenuAdd,proto3,oneof"`
}

type UserFriendContext_PullUsernameSearch_ struct {
	PullUsernameSearch *UserFriendContext_PullUsernameSearch `protobuf:"bytes,27,opt,name=pull_username_search,json=pullUsernameSearch,proto3,oneof"`
}

type UserFriendContext_SendToUsernameSearch_ struct {
	SendToUsernameSearch *UserFriendContext_SendToUsernameSearch `protobuf:"bytes,28,opt,name=send_to_username_search,json=sendToUsernameSearch,proto3,oneof"`
}

type UserFriendContext_LinkAttribution_ struct {
	LinkAttribution *UserFriendContext_LinkAttribution `protobuf:"bytes,29,opt,name=link_attribution,json=linkAttribution,proto3,oneof"`
}

type UserFriendContext_SuggestFriend_ struct {
	SuggestFriend *UserFriendContext_SuggestFriend `protobuf:"bytes,30,opt,name=suggest_friend,json=suggestFriend,proto3,oneof"`
}

func (*UserFriendContext_Default) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_Scan_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_ExplicitUsernameSearch_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_InlineUsernameSearch_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_InlinePromoted_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_FuzzyMatching_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_AddressBookMatching_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_PromotedChatsList_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_TalkToAd_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_FindPeopleAd_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_GroupAddAll_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_GroupInfoAdd_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_WebKikMe_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_WebProfileKikMe_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_CardProfileKikProtocol_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_CardSendKikToUser_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_CardOpenConversation_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_CardOpenProfile_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_FriendPicker_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_UsernameMention_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_BotMention_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_BotMentionReply_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_BotShop_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_GroupMemberAdd_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_GroupInfoMenuAdd_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_GroupMenuAdd_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_PullUsernameSearch_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_SendToUsernameSearch_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_LinkAttribution_) isUserFriendContext_ContextKind() {}

func (*UserFriendContext_SuggestFriend_) isUserFriendContext_ContextKind() {}

// When DefaultContext is specified, default friending context notification message of
// "soandso started chatting with you" is to be used and that the friending context type is
// not important.
type UserFriendContext_DefaultContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_DefaultContext) Reset() {
	*x = UserFriendContext_DefaultContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_DefaultContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_DefaultContext) ProtoMessage() {}

func (x *UserFriendContext_DefaultContext) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_DefaultContext.ProtoReflect.Descriptor instead.
func (*UserFriendContext_DefaultContext) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 0}
}

type UserFriendContext_Scan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// According to https://github.com/sokkit-io/kik-product/wiki/Scan-Code
	// scan_code has max length of 314 And nonce: 256.
	// Here length restriction here is simply provide a reasonable bound.
	ScanCode []byte `protobuf:"bytes,1,opt,name=scan_code,json=scanCode,proto3" json:"scan_code,omitempty"`
	NonceKey []byte `protobuf:"bytes,2,opt,name=nonce_key,json=nonceKey,proto3" json:"nonce_key,omitempty"`
}

func (x *UserFriendContext_Scan) Reset() {
	*x = UserFriendContext_Scan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_Scan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_Scan) ProtoMessage() {}

func (x *UserFriendContext_Scan) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_Scan.ProtoReflect.Descriptor instead.
func (*UserFriendContext_Scan) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 1}
}

func (x *UserFriendContext_Scan) GetScanCode() []byte {
	if x != nil {
		return x.ScanCode
	}
	return nil
}

func (x *UserFriendContext_Scan) GetNonceKey() []byte {
	if x != nil {
		return x.NonceKey
	}
	return nil
}

type UserFriendContext_ExplicitUsernameSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_ExplicitUsernameSearch) Reset() {
	*x = UserFriendContext_ExplicitUsernameSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_ExplicitUsernameSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_ExplicitUsernameSearch) ProtoMessage() {}

func (x *UserFriendContext_ExplicitUsernameSearch) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_ExplicitUsernameSearch.ProtoReflect.Descriptor instead.
func (*UserFriendContext_ExplicitUsernameSearch) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 2}
}

type UserFriendContext_InlineUsernameSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_InlineUsernameSearch) Reset() {
	*x = UserFriendContext_InlineUsernameSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_InlineUsernameSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_InlineUsernameSearch) ProtoMessage() {}

func (x *UserFriendContext_InlineUsernameSearch) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_InlineUsernameSearch.ProtoReflect.Descriptor instead.
func (*UserFriendContext_InlineUsernameSearch) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 3}
}

type UserFriendContext_InlinePromoted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_InlinePromoted) Reset() {
	*x = UserFriendContext_InlinePromoted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_InlinePromoted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_InlinePromoted) ProtoMessage() {}

func (x *UserFriendContext_InlinePromoted) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_InlinePromoted.ProtoReflect.Descriptor instead.
func (*UserFriendContext_InlinePromoted) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 4}
}

type UserFriendContext_FuzzyMatching struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_FuzzyMatching) Reset() {
	*x = UserFriendContext_FuzzyMatching{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_FuzzyMatching) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_FuzzyMatching) ProtoMessage() {}

func (x *UserFriendContext_FuzzyMatching) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_FuzzyMatching.ProtoReflect.Descriptor instead.
func (*UserFriendContext_FuzzyMatching) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 5}
}

type UserFriendContext_AddressBookMatching struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_AddressBookMatching) Reset() {
	*x = UserFriendContext_AddressBookMatching{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_AddressBookMatching) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_AddressBookMatching) ProtoMessage() {}

func (x *UserFriendContext_AddressBookMatching) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_AddressBookMatching.ProtoReflect.Descriptor instead.
func (*UserFriendContext_AddressBookMatching) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 6}
}

type UserFriendContext_PromotedChatsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_PromotedChatsList) Reset() {
	*x = UserFriendContext_PromotedChatsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_PromotedChatsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_PromotedChatsList) ProtoMessage() {}

func (x *UserFriendContext_PromotedChatsList) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_PromotedChatsList.ProtoReflect.Descriptor instead.
func (*UserFriendContext_PromotedChatsList) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 7}
}

type UserFriendContext_TalkToAd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_TalkToAd) Reset() {
	*x = UserFriendContext_TalkToAd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_TalkToAd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_TalkToAd) ProtoMessage() {}

func (x *UserFriendContext_TalkToAd) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_TalkToAd.ProtoReflect.Descriptor instead.
func (*UserFriendContext_TalkToAd) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 8}
}

type UserFriendContext_FindPeopleAd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_FindPeopleAd) Reset() {
	*x = UserFriendContext_FindPeopleAd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_FindPeopleAd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_FindPeopleAd) ProtoMessage() {}

func (x *UserFriendContext_FindPeopleAd) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_FindPeopleAd.ProtoReflect.Descriptor instead.
func (*UserFriendContext_FindPeopleAd) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 9}
}

type UserFriendContext_GroupAddAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Key:
	//	*UserFriendContext_GroupAddAll_ChatId
	Key isUserFriendContext_GroupAddAll_Key `protobuf_oneof:"key"`
}

func (x *UserFriendContext_GroupAddAll) Reset() {
	*x = UserFriendContext_GroupAddAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_GroupAddAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_GroupAddAll) ProtoMessage() {}

func (x *UserFriendContext_GroupAddAll) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_GroupAddAll.ProtoReflect.Descriptor instead.
func (*UserFriendContext_GroupAddAll) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 10}
}

func (m *UserFriendContext_GroupAddAll) GetKey() isUserFriendContext_GroupAddAll_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *UserFriendContext_GroupAddAll) GetChatId() *v2.ChatId {
	if x, ok := x.GetKey().(*UserFriendContext_GroupAddAll_ChatId); ok {
		return x.ChatId
	}
	return nil
}

type isUserFriendContext_GroupAddAll_Key interface {
	isUserFriendContext_GroupAddAll_Key()
}

type UserFriendContext_GroupAddAll_ChatId struct {
	ChatId *v2.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3,oneof"`
}

func (*UserFriendContext_GroupAddAll_ChatId) isUserFriendContext_GroupAddAll_Key() {}

type UserFriendContext_GroupInfoAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Key:
	//	*UserFriendContext_GroupInfoAdd_ChatId
	Key isUserFriendContext_GroupInfoAdd_Key `protobuf_oneof:"key"`
}

func (x *UserFriendContext_GroupInfoAdd) Reset() {
	*x = UserFriendContext_GroupInfoAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_GroupInfoAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_GroupInfoAdd) ProtoMessage() {}

func (x *UserFriendContext_GroupInfoAdd) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_GroupInfoAdd.ProtoReflect.Descriptor instead.
func (*UserFriendContext_GroupInfoAdd) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 11}
}

func (m *UserFriendContext_GroupInfoAdd) GetKey() isUserFriendContext_GroupInfoAdd_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *UserFriendContext_GroupInfoAdd) GetChatId() *v2.ChatId {
	if x, ok := x.GetKey().(*UserFriendContext_GroupInfoAdd_ChatId); ok {
		return x.ChatId
	}
	return nil
}

type isUserFriendContext_GroupInfoAdd_Key interface {
	isUserFriendContext_GroupInfoAdd_Key()
}

type UserFriendContext_GroupInfoAdd_ChatId struct {
	ChatId *v2.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3,oneof"`
}

func (*UserFriendContext_GroupInfoAdd_ChatId) isUserFriendContext_GroupInfoAdd_Key() {}

type UserFriendContext_WebKikMe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelatedUrl string `protobuf:"bytes,3,opt,name=related_url,json=relatedUrl,proto3" json:"related_url,omitempty"`
}

func (x *UserFriendContext_WebKikMe) Reset() {
	*x = UserFriendContext_WebKikMe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_WebKikMe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_WebKikMe) ProtoMessage() {}

func (x *UserFriendContext_WebKikMe) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_WebKikMe.ProtoReflect.Descriptor instead.
func (*UserFriendContext_WebKikMe) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 12}
}

func (x *UserFriendContext_WebKikMe) GetRelatedUrl() string {
	if x != nil {
		return x.RelatedUrl
	}
	return ""
}

type UserFriendContext_WebProfileKikMe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelatedUrl string `protobuf:"bytes,3,opt,name=related_url,json=relatedUrl,proto3" json:"related_url,omitempty"`
}

func (x *UserFriendContext_WebProfileKikMe) Reset() {
	*x = UserFriendContext_WebProfileKikMe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_WebProfileKikMe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_WebProfileKikMe) ProtoMessage() {}

func (x *UserFriendContext_WebProfileKikMe) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_WebProfileKikMe.ProtoReflect.Descriptor instead.
func (*UserFriendContext_WebProfileKikMe) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 13}
}

func (x *UserFriendContext_WebProfileKikMe) GetRelatedUrl() string {
	if x != nil {
		return x.RelatedUrl
	}
	return ""
}

type UserFriendContext_CardProfileKikProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelatedCardName string `protobuf:"bytes,2,opt,name=related_card_name,json=relatedCardName,proto3" json:"related_card_name,omitempty"`
	RelatedUrl      string `protobuf:"bytes,3,opt,name=related_url,json=relatedUrl,proto3" json:"related_url,omitempty"`
}

func (x *UserFriendContext_CardProfileKikProtocol) Reset() {
	*x = UserFriendContext_CardProfileKikProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_CardProfileKikProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_CardProfileKikProtocol) ProtoMessage() {}

func (x *UserFriendContext_CardProfileKikProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_CardProfileKikProtocol.ProtoReflect.Descriptor instead.
func (*UserFriendContext_CardProfileKikProtocol) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 14}
}

func (x *UserFriendContext_CardProfileKikProtocol) GetRelatedCardName() string {
	if x != nil {
		return x.RelatedCardName
	}
	return ""
}

func (x *UserFriendContext_CardProfileKikProtocol) GetRelatedUrl() string {
	if x != nil {
		return x.RelatedUrl
	}
	return ""
}

type UserFriendContext_CardSendKikToUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelatedCardName string `protobuf:"bytes,2,opt,name=related_card_name,json=relatedCardName,proto3" json:"related_card_name,omitempty"`
	RelatedUrl      string `protobuf:"bytes,3,opt,name=related_url,json=relatedUrl,proto3" json:"related_url,omitempty"`
}

func (x *UserFriendContext_CardSendKikToUser) Reset() {
	*x = UserFriendContext_CardSendKikToUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_CardSendKikToUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_CardSendKikToUser) ProtoMessage() {}

func (x *UserFriendContext_CardSendKikToUser) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_CardSendKikToUser.ProtoReflect.Descriptor instead.
func (*UserFriendContext_CardSendKikToUser) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 15}
}

func (x *UserFriendContext_CardSendKikToUser) GetRelatedCardName() string {
	if x != nil {
		return x.RelatedCardName
	}
	return ""
}

func (x *UserFriendContext_CardSendKikToUser) GetRelatedUrl() string {
	if x != nil {
		return x.RelatedUrl
	}
	return ""
}

type UserFriendContext_CardOpenConversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelatedCardName string `protobuf:"bytes,2,opt,name=related_card_name,json=relatedCardName,proto3" json:"related_card_name,omitempty"`
	RelatedUrl      string `protobuf:"bytes,3,opt,name=related_url,json=relatedUrl,proto3" json:"related_url,omitempty"`
}

func (x *UserFriendContext_CardOpenConversation) Reset() {
	*x = UserFriendContext_CardOpenConversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_CardOpenConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_CardOpenConversation) ProtoMessage() {}

func (x *UserFriendContext_CardOpenConversation) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_CardOpenConversation.ProtoReflect.Descriptor instead.
func (*UserFriendContext_CardOpenConversation) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 16}
}

func (x *UserFriendContext_CardOpenConversation) GetRelatedCardName() string {
	if x != nil {
		return x.RelatedCardName
	}
	return ""
}

func (x *UserFriendContext_CardOpenConversation) GetRelatedUrl() string {
	if x != nil {
		return x.RelatedUrl
	}
	return ""
}

type UserFriendContext_CardOpenProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelatedCardName string `protobuf:"bytes,2,opt,name=related_card_name,json=relatedCardName,proto3" json:"related_card_name,omitempty"`
	RelatedUrl      string `protobuf:"bytes,3,opt,name=related_url,json=relatedUrl,proto3" json:"related_url,omitempty"`
}

func (x *UserFriendContext_CardOpenProfile) Reset() {
	*x = UserFriendContext_CardOpenProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_CardOpenProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_CardOpenProfile) ProtoMessage() {}

func (x *UserFriendContext_CardOpenProfile) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_CardOpenProfile.ProtoReflect.Descriptor instead.
func (*UserFriendContext_CardOpenProfile) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 17}
}

func (x *UserFriendContext_CardOpenProfile) GetRelatedCardName() string {
	if x != nil {
		return x.RelatedCardName
	}
	return ""
}

func (x *UserFriendContext_CardOpenProfile) GetRelatedUrl() string {
	if x != nil {
		return x.RelatedUrl
	}
	return ""
}

type UserFriendContext_SuggestFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_SuggestFriend) Reset() {
	*x = UserFriendContext_SuggestFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_SuggestFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_SuggestFriend) ProtoMessage() {}

func (x *UserFriendContext_SuggestFriend) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_SuggestFriend.ProtoReflect.Descriptor instead.
func (*UserFriendContext_SuggestFriend) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 18}
}

type UserFriendContext_FriendPicker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_FriendPicker) Reset() {
	*x = UserFriendContext_FriendPicker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_FriendPicker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_FriendPicker) ProtoMessage() {}

func (x *UserFriendContext_FriendPicker) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_FriendPicker.ProtoReflect.Descriptor instead.
func (*UserFriendContext_FriendPicker) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 19}
}

type UserFriendContext_LinkAttribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_LinkAttribution) Reset() {
	*x = UserFriendContext_LinkAttribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_LinkAttribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_LinkAttribution) ProtoMessage() {}

func (x *UserFriendContext_LinkAttribution) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_LinkAttribution.ProtoReflect.Descriptor instead.
func (*UserFriendContext_LinkAttribution) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 20}
}

type UserFriendContext_UsernameMention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_UsernameMention) Reset() {
	*x = UserFriendContext_UsernameMention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_UsernameMention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_UsernameMention) ProtoMessage() {}

func (x *UserFriendContext_UsernameMention) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_UsernameMention.ProtoReflect.Descriptor instead.
func (*UserFriendContext_UsernameMention) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 21}
}

type UserFriendContext_BotMention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_BotMention) Reset() {
	*x = UserFriendContext_BotMention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_BotMention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_BotMention) ProtoMessage() {}

func (x *UserFriendContext_BotMention) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_BotMention.ProtoReflect.Descriptor instead.
func (*UserFriendContext_BotMention) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 22}
}

type UserFriendContext_BotMentionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_BotMentionReply) Reset() {
	*x = UserFriendContext_BotMentionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_BotMentionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_BotMentionReply) ProtoMessage() {}

func (x *UserFriendContext_BotMentionReply) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_BotMentionReply.ProtoReflect.Descriptor instead.
func (*UserFriendContext_BotMentionReply) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 23}
}

type UserFriendContext_BotShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_BotShop) Reset() {
	*x = UserFriendContext_BotShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_BotShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_BotShop) ProtoMessage() {}

func (x *UserFriendContext_BotShop) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_BotShop.ProtoReflect.Descriptor instead.
func (*UserFriendContext_BotShop) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 24}
}

type UserFriendContext_GroupMemberAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_GroupMemberAdd) Reset() {
	*x = UserFriendContext_GroupMemberAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_GroupMemberAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_GroupMemberAdd) ProtoMessage() {}

func (x *UserFriendContext_GroupMemberAdd) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_GroupMemberAdd.ProtoReflect.Descriptor instead.
func (*UserFriendContext_GroupMemberAdd) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 25}
}

type UserFriendContext_GroupInfoMenuAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Key:
	//	*UserFriendContext_GroupInfoMenuAdd_ChatId
	Key isUserFriendContext_GroupInfoMenuAdd_Key `protobuf_oneof:"key"`
}

func (x *UserFriendContext_GroupInfoMenuAdd) Reset() {
	*x = UserFriendContext_GroupInfoMenuAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_GroupInfoMenuAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_GroupInfoMenuAdd) ProtoMessage() {}

func (x *UserFriendContext_GroupInfoMenuAdd) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_GroupInfoMenuAdd.ProtoReflect.Descriptor instead.
func (*UserFriendContext_GroupInfoMenuAdd) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 26}
}

func (m *UserFriendContext_GroupInfoMenuAdd) GetKey() isUserFriendContext_GroupInfoMenuAdd_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *UserFriendContext_GroupInfoMenuAdd) GetChatId() *v2.ChatId {
	if x, ok := x.GetKey().(*UserFriendContext_GroupInfoMenuAdd_ChatId); ok {
		return x.ChatId
	}
	return nil
}

type isUserFriendContext_GroupInfoMenuAdd_Key interface {
	isUserFriendContext_GroupInfoMenuAdd_Key()
}

type UserFriendContext_GroupInfoMenuAdd_ChatId struct {
	ChatId *v2.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3,oneof"`
}

func (*UserFriendContext_GroupInfoMenuAdd_ChatId) isUserFriendContext_GroupInfoMenuAdd_Key() {}

type UserFriendContext_GroupMenuAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Key:
	//	*UserFriendContext_GroupMenuAdd_ChatId
	Key isUserFriendContext_GroupMenuAdd_Key `protobuf_oneof:"key"`
}

func (x *UserFriendContext_GroupMenuAdd) Reset() {
	*x = UserFriendContext_GroupMenuAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_GroupMenuAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_GroupMenuAdd) ProtoMessage() {}

func (x *UserFriendContext_GroupMenuAdd) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_GroupMenuAdd.ProtoReflect.Descriptor instead.
func (*UserFriendContext_GroupMenuAdd) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 27}
}

func (m *UserFriendContext_GroupMenuAdd) GetKey() isUserFriendContext_GroupMenuAdd_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *UserFriendContext_GroupMenuAdd) GetChatId() *v2.ChatId {
	if x, ok := x.GetKey().(*UserFriendContext_GroupMenuAdd_ChatId); ok {
		return x.ChatId
	}
	return nil
}

type isUserFriendContext_GroupMenuAdd_Key interface {
	isUserFriendContext_GroupMenuAdd_Key()
}

type UserFriendContext_GroupMenuAdd_ChatId struct {
	ChatId *v2.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3,oneof"`
}

func (*UserFriendContext_GroupMenuAdd_ChatId) isUserFriendContext_GroupMenuAdd_Key() {}

type UserFriendContext_PullUsernameSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_PullUsernameSearch) Reset() {
	*x = UserFriendContext_PullUsernameSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_PullUsernameSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_PullUsernameSearch) ProtoMessage() {}

func (x *UserFriendContext_PullUsernameSearch) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_PullUsernameSearch.ProtoReflect.Descriptor instead.
func (*UserFriendContext_PullUsernameSearch) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 28}
}

type UserFriendContext_SendToUsernameSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserFriendContext_SendToUsernameSearch) Reset() {
	*x = UserFriendContext_SendToUsernameSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendContext_SendToUsernameSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendContext_SendToUsernameSearch) ProtoMessage() {}

func (x *UserFriendContext_SendToUsernameSearch) ProtoReflect() protoreflect.Message {
	mi := &file_contactlist_v2_contact_list_common_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendContext_SendToUsernameSearch.ProtoReflect.Descriptor instead.
func (*UserFriendContext_SendToUsernameSearch) Descriptor() ([]byte, []int) {
	return file_contactlist_v2_contact_list_common_proto_rawDescGZIP(), []int{0, 29}
}

var File_contactlist_v2_contact_list_common_proto protoreflect.FileDescriptor

var file_contactlist_v2_contact_list_common_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76, 0x32,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76,
	0x32, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x22, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x53, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x43,
	0x0a, 0x04, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x73,
	0x63, 0x61, 0x6e, 0x12, 0x7b, 0x0a, 0x18, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e,
	0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x00, 0x52, 0x16, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x75, 0x0a, 0x16, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48,
	0x00, 0x52, 0x14, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x62, 0x0a, 0x0f, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x5f, 0x0a, 0x0e, 0x66,
	0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x46, 0x75,
	0x7a, 0x7a, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x66,
	0x75, 0x7a, 0x7a, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x72, 0x0a, 0x15,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x6f,
	0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x13, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x12, 0x6c, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61,
	0x74, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x51,
	0x0a, 0x0a, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x54, 0x61, 0x6c,
	0x6b, 0x54, 0x6f, 0x41, 0x64, 0x48, 0x00, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x54, 0x6f, 0x41,
	0x64, 0x12, 0x5d, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x5f, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x41, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x41, 0x64,
	0x12, 0x5a, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x61, 0x6c,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x6c, 0x48, 0x00, 0x52,
	0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x6c, 0x12, 0x5d, 0x0a, 0x0e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x64, 0x64, 0x12, 0x51, 0x0a, 0x0a, 0x77,
	0x65, 0x62, 0x5f, 0x6b, 0x69, 0x6b, 0x5f, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x4b, 0x69, 0x6b,
	0x4d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x77, 0x65, 0x62, 0x4b, 0x69, 0x6b, 0x4d, 0x65, 0x12, 0x67,
	0x0a, 0x12, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x69,
	0x6b, 0x5f, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b,
	0x69, 0x6b, 0x4d, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x77, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4b, 0x69, 0x6b, 0x4d, 0x65, 0x12, 0x7c, 0x0a, 0x19, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x69, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4b, 0x69, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x16, 0x63,
	0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x69, 0x6b, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x6e, 0x0a, 0x15, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x6b, 0x69, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x69, 0x6b, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x11, 0x63, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x69, 0x6b, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x75, 0x0a, 0x16, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x70, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x11,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x12, 0x65, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x0b, 0x62, 0x6f, 0x74,
	0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x6f, 0x74, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x66, 0x0a, 0x11, 0x62, 0x6f, 0x74, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x6f, 0x74, 0x4d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4d, 0x0a, 0x08, 0x62, 0x6f, 0x74,
	0x5f, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x48, 0x00, 0x52,
	0x07, 0x62, 0x6f, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x63, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x6a, 0x0a,
	0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x65, 0x6e, 0x75,
	0x5f, 0x61, 0x64, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65,
	0x6e, 0x75, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x12, 0x5d, 0x0a, 0x0e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x12, 0x6f, 0x0a, 0x14, 0x70, 0x75, 0x6c, 0x6c,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x48, 0x00, 0x52, 0x12, 0x70, 0x75, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x76, 0x0a, 0x17, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x65, 0x0a, 0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x0e, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x1a, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x56, 0x0a, 0x04, 0x53,
	0x63, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05, 0x08, 0x01, 0x30, 0xf4,
	0x03, 0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09,
	0xca, 0x9d, 0x25, 0x05, 0x08, 0x01, 0x30, 0xf4, 0x03, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x4b, 0x65, 0x79, 0x1a, 0x18, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x16, 0x0a,
	0x14, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x10, 0x0a, 0x0e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x1a, 0x0f, 0x0a, 0x0d, 0x46, 0x75, 0x7a, 0x7a, 0x79,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x1a, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x1a,
	0x13, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x0a, 0x0a, 0x08, 0x54, 0x61, 0x6c, 0x6b, 0x54, 0x6f, 0x41, 0x64,
	0x1a, 0x0e, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x41, 0x64,
	0x1a, 0x42, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x6c, 0x12,
	0x2c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x05, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x1a, 0x43, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x41, 0x64, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74,
	0x49, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x36, 0x0a, 0x08, 0x57, 0x65, 0x62,
	0x4b, 0x69, 0x6b, 0x4d, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05,
	0x08, 0x01, 0x30, 0x88, 0x27, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x72,
	0x6c, 0x1a, 0x3d, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b,
	0x69, 0x6b, 0x4d, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05, 0x08,
	0x01, 0x30, 0x88, 0x27, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x72, 0x6c,
	0x1a, 0x79, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b,
	0x69, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x35, 0x0a, 0x11, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05, 0x08, 0x01, 0x30, 0x80, 0x28,
	0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0x9d, 0x25, 0x03, 0x30, 0x88, 0x27, 0x52,
	0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x1a, 0x74, 0x0a, 0x11, 0x43,
	0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x69, 0x6b, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x35, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0x9d, 0x25,
	0x05, 0x08, 0x01, 0x30, 0x80, 0x28, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0x9d,
	0x25, 0x03, 0x30, 0x88, 0x27, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x72,
	0x6c, 0x1a, 0x77, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x11, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05, 0x08, 0x01, 0x30, 0x80, 0x28, 0x52,
	0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0x9d, 0x25, 0x03, 0x30, 0x88, 0x27, 0x52, 0x0a,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x1a, 0x72, 0x0a, 0x0f, 0x43, 0x61,
	0x72, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x35, 0x0a,
	0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05, 0x08, 0x01,
	0x30, 0x80, 0x28, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0x9d, 0x25, 0x03, 0x30,
	0x88, 0x27, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x1a, 0x0f,
	0x0a, 0x0d, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x1a,
	0x0e, 0x0a, 0x0c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x1a,
	0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x11, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0c, 0x0a, 0x0a, 0x42, 0x6f, 0x74, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x11, 0x0a, 0x0f, 0x42, 0x6f, 0x74, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x1a, 0x09, 0x0a, 0x07, 0x42, 0x6f, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x1a, 0x10, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x1a, 0x47, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x43, 0x0a, 0x0c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x12, 0x2c, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x1a, 0x14, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42,
	0x0e, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x42,
	0x89, 0x01, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x67, 0x65, 0x6e, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69,
	0x61, 0x73, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76, 0x32, 0x3b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0xa0, 0x01, 0x01, 0xa2, 0x02, 0x0e, 0x4b, 0x50, 0x42,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x4e, 0x4c, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_contactlist_v2_contact_list_common_proto_rawDescOnce sync.Once
	file_contactlist_v2_contact_list_common_proto_rawDescData = file_contactlist_v2_contact_list_common_proto_rawDesc
)

func file_contactlist_v2_contact_list_common_proto_rawDescGZIP() []byte {
	file_contactlist_v2_contact_list_common_proto_rawDescOnce.Do(func() {
		file_contactlist_v2_contact_list_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_contactlist_v2_contact_list_common_proto_rawDescData)
	})
	return file_contactlist_v2_contact_list_common_proto_rawDescData
}

var file_contactlist_v2_contact_list_common_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_contactlist_v2_contact_list_common_proto_goTypes = []interface{}{
	(*UserFriendContext)(nil),                        // 0: common.contactlist.v2.UserFriendContext
	(*UserFriendContext_DefaultContext)(nil),         // 1: common.contactlist.v2.UserFriendContext.DefaultContext
	(*UserFriendContext_Scan)(nil),                   // 2: common.contactlist.v2.UserFriendContext.Scan
	(*UserFriendContext_ExplicitUsernameSearch)(nil), // 3: common.contactlist.v2.UserFriendContext.ExplicitUsernameSearch
	(*UserFriendContext_InlineUsernameSearch)(nil),   // 4: common.contactlist.v2.UserFriendContext.InlineUsernameSearch
	(*UserFriendContext_InlinePromoted)(nil),         // 5: common.contactlist.v2.UserFriendContext.InlinePromoted
	(*UserFriendContext_FuzzyMatching)(nil),          // 6: common.contactlist.v2.UserFriendContext.FuzzyMatching
	(*UserFriendContext_AddressBookMatching)(nil),    // 7: common.contactlist.v2.UserFriendContext.AddressBookMatching
	(*UserFriendContext_PromotedChatsList)(nil),      // 8: common.contactlist.v2.UserFriendContext.PromotedChatsList
	(*UserFriendContext_TalkToAd)(nil),               // 9: common.contactlist.v2.UserFriendContext.TalkToAd
	(*UserFriendContext_FindPeopleAd)(nil),           // 10: common.contactlist.v2.UserFriendContext.FindPeopleAd
	(*UserFriendContext_GroupAddAll)(nil),            // 11: common.contactlist.v2.UserFriendContext.GroupAddAll
	(*UserFriendContext_GroupInfoAdd)(nil),           // 12: common.contactlist.v2.UserFriendContext.GroupInfoAdd
	(*UserFriendContext_WebKikMe)(nil),               // 13: common.contactlist.v2.UserFriendContext.WebKikMe
	(*UserFriendContext_WebProfileKikMe)(nil),        // 14: common.contactlist.v2.UserFriendContext.WebProfileKikMe
	(*UserFriendContext_CardProfileKikProtocol)(nil), // 15: common.contactlist.v2.UserFriendContext.CardProfileKikProtocol
	(*UserFriendContext_CardSendKikToUser)(nil),      // 16: common.contactlist.v2.UserFriendContext.CardSendKikToUser
	(*UserFriendContext_CardOpenConversation)(nil),   // 17: common.contactlist.v2.UserFriendContext.CardOpenConversation
	(*UserFriendContext_CardOpenProfile)(nil),        // 18: common.contactlist.v2.UserFriendContext.CardOpenProfile
	(*UserFriendContext_SuggestFriend)(nil),          // 19: common.contactlist.v2.UserFriendContext.SuggestFriend
	(*UserFriendContext_FriendPicker)(nil),           // 20: common.contactlist.v2.UserFriendContext.FriendPicker
	(*UserFriendContext_LinkAttribution)(nil),        // 21: common.contactlist.v2.UserFriendContext.LinkAttribution
	(*UserFriendContext_UsernameMention)(nil),        // 22: common.contactlist.v2.UserFriendContext.UsernameMention
	(*UserFriendContext_BotMention)(nil),             // 23: common.contactlist.v2.UserFriendContext.BotMention
	(*UserFriendContext_BotMentionReply)(nil),        // 24: common.contactlist.v2.UserFriendContext.BotMentionReply
	(*UserFriendContext_BotShop)(nil),                // 25: common.contactlist.v2.UserFriendContext.BotShop
	(*UserFriendContext_GroupMemberAdd)(nil),         // 26: common.contactlist.v2.UserFriendContext.GroupMemberAdd
	(*UserFriendContext_GroupInfoMenuAdd)(nil),       // 27: common.contactlist.v2.UserFriendContext.GroupInfoMenuAdd
	(*UserFriendContext_GroupMenuAdd)(nil),           // 28: common.contactlist.v2.UserFriendContext.GroupMenuAdd
	(*UserFriendContext_PullUsernameSearch)(nil),     // 29: common.contactlist.v2.UserFriendContext.PullUsernameSearch
	(*UserFriendContext_SendToUsernameSearch)(nil),   // 30: common.contactlist.v2.UserFriendContext.SendToUsernameSearch
	(*v2.ChatId)(nil),                                // 31: common.v2.ChatId
}
var file_contactlist_v2_contact_list_common_proto_depIdxs = []int32{
	1,  // 0: common.contactlist.v2.UserFriendContext.default:type_name -> common.contactlist.v2.UserFriendContext.DefaultContext
	2,  // 1: common.contactlist.v2.UserFriendContext.scan:type_name -> common.contactlist.v2.UserFriendContext.Scan
	3,  // 2: common.contactlist.v2.UserFriendContext.explicit_username_search:type_name -> common.contactlist.v2.UserFriendContext.ExplicitUsernameSearch
	4,  // 3: common.contactlist.v2.UserFriendContext.inline_username_search:type_name -> common.contactlist.v2.UserFriendContext.InlineUsernameSearch
	5,  // 4: common.contactlist.v2.UserFriendContext.inline_promoted:type_name -> common.contactlist.v2.UserFriendContext.InlinePromoted
	6,  // 5: common.contactlist.v2.UserFriendContext.fuzzy_matching:type_name -> common.contactlist.v2.UserFriendContext.FuzzyMatching
	7,  // 6: common.contactlist.v2.UserFriendContext.address_book_matching:type_name -> common.contactlist.v2.UserFriendContext.AddressBookMatching
	8,  // 7: common.contactlist.v2.UserFriendContext.promoted_chats_list:type_name -> common.contactlist.v2.UserFriendContext.PromotedChatsList
	9,  // 8: common.contactlist.v2.UserFriendContext.talk_to_ad:type_name -> common.contactlist.v2.UserFriendContext.TalkToAd
	10, // 9: common.contactlist.v2.UserFriendContext.find_people_ad:type_name -> common.contactlist.v2.UserFriendContext.FindPeopleAd
	11, // 10: common.contactlist.v2.UserFriendContext.group_add_all:type_name -> common.contactlist.v2.UserFriendContext.GroupAddAll
	12, // 11: common.contactlist.v2.UserFriendContext.group_info_add:type_name -> common.contactlist.v2.UserFriendContext.GroupInfoAdd
	13, // 12: common.contactlist.v2.UserFriendContext.web_kik_me:type_name -> common.contactlist.v2.UserFriendContext.WebKikMe
	14, // 13: common.contactlist.v2.UserFriendContext.web_profile_kik_me:type_name -> common.contactlist.v2.UserFriendContext.WebProfileKikMe
	15, // 14: common.contactlist.v2.UserFriendContext.card_profile_kik_protocol:type_name -> common.contactlist.v2.UserFriendContext.CardProfileKikProtocol
	16, // 15: common.contactlist.v2.UserFriendContext.card_send_kik_to_user:type_name -> common.contactlist.v2.UserFriendContext.CardSendKikToUser
	17, // 16: common.contactlist.v2.UserFriendContext.card_open_conversation:type_name -> common.contactlist.v2.UserFriendContext.CardOpenConversation
	18, // 17: common.contactlist.v2.UserFriendContext.card_open_profile:type_name -> common.contactlist.v2.UserFriendContext.CardOpenProfile
	20, // 18: common.contactlist.v2.UserFriendContext.friend_picker:type_name -> common.contactlist.v2.UserFriendContext.FriendPicker
	22, // 19: common.contactlist.v2.UserFriendContext.username_mention:type_name -> common.contactlist.v2.UserFriendContext.UsernameMention
	23, // 20: common.contactlist.v2.UserFriendContext.bot_mention:type_name -> common.contactlist.v2.UserFriendContext.BotMention
	24, // 21: common.contactlist.v2.UserFriendContext.bot_mention_reply:type_name -> common.contactlist.v2.UserFriendContext.BotMentionReply
	25, // 22: common.contactlist.v2.UserFriendContext.bot_shop:type_name -> common.contactlist.v2.UserFriendContext.BotShop
	26, // 23: common.contactlist.v2.UserFriendContext.group_member_add:type_name -> common.contactlist.v2.UserFriendContext.GroupMemberAdd
	27, // 24: common.contactlist.v2.UserFriendContext.group_info_menu_add:type_name -> common.contactlist.v2.UserFriendContext.GroupInfoMenuAdd
	28, // 25: common.contactlist.v2.UserFriendContext.group_menu_add:type_name -> common.contactlist.v2.UserFriendContext.GroupMenuAdd
	29, // 26: common.contactlist.v2.UserFriendContext.pull_username_search:type_name -> common.contactlist.v2.UserFriendContext.PullUsernameSearch
	30, // 27: common.contactlist.v2.UserFriendContext.send_to_username_search:type_name -> common.contactlist.v2.UserFriendContext.SendToUsernameSearch
	21, // 28: common.contactlist.v2.UserFriendContext.link_attribution:type_name -> common.contactlist.v2.UserFriendContext.LinkAttribution
	19, // 29: common.contactlist.v2.UserFriendContext.suggest_friend:type_name -> common.contactlist.v2.UserFriendContext.SuggestFriend
	31, // 30: common.contactlist.v2.UserFriendContext.GroupAddAll.chat_id:type_name -> common.v2.ChatId
	31, // 31: common.contactlist.v2.UserFriendContext.GroupInfoAdd.chat_id:type_name -> common.v2.ChatId
	31, // 32: common.contactlist.v2.UserFriendContext.GroupInfoMenuAdd.chat_id:type_name -> common.v2.ChatId
	31, // 33: common.contactlist.v2.UserFriendContext.GroupMenuAdd.chat_id:type_name -> common.v2.ChatId
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_contactlist_v2_contact_list_common_proto_init() }
func file_contactlist_v2_contact_list_common_proto_init() {
	if File_contactlist_v2_contact_list_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contactlist_v2_contact_list_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_DefaultContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_Scan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_ExplicitUsernameSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_InlineUsernameSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_InlinePromoted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_FuzzyMatching); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_AddressBookMatching); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_PromotedChatsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_TalkToAd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_FindPeopleAd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_GroupAddAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_GroupInfoAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_WebKikMe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_WebProfileKikMe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_CardProfileKikProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_CardSendKikToUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_CardOpenConversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_CardOpenProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_SuggestFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_FriendPicker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_LinkAttribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_UsernameMention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_BotMention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_BotMentionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_BotShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_GroupMemberAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_GroupInfoMenuAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_GroupMenuAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_PullUsernameSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contactlist_v2_contact_list_common_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendContext_SendToUsernameSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_contactlist_v2_contact_list_common_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*UserFriendContext_Default)(nil),
		(*UserFriendContext_Scan_)(nil),
		(*UserFriendContext_ExplicitUsernameSearch_)(nil),
		(*UserFriendContext_InlineUsernameSearch_)(nil),
		(*UserFriendContext_InlinePromoted_)(nil),
		(*UserFriendContext_FuzzyMatching_)(nil),
		(*UserFriendContext_AddressBookMatching_)(nil),
		(*UserFriendContext_PromotedChatsList_)(nil),
		(*UserFriendContext_TalkToAd_)(nil),
		(*UserFriendContext_FindPeopleAd_)(nil),
		(*UserFriendContext_GroupAddAll_)(nil),
		(*UserFriendContext_GroupInfoAdd_)(nil),
		(*UserFriendContext_WebKikMe_)(nil),
		(*UserFriendContext_WebProfileKikMe_)(nil),
		(*UserFriendContext_CardProfileKikProtocol_)(nil),
		(*UserFriendContext_CardSendKikToUser_)(nil),
		(*UserFriendContext_CardOpenConversation_)(nil),
		(*UserFriendContext_CardOpenProfile_)(nil),
		(*UserFriendContext_FriendPicker_)(nil),
		(*UserFriendContext_UsernameMention_)(nil),
		(*UserFriendContext_BotMention_)(nil),
		(*UserFriendContext_BotMentionReply_)(nil),
		(*UserFriendContext_BotShop_)(nil),
		(*UserFriendContext_GroupMemberAdd_)(nil),
		(*UserFriendContext_GroupInfoMenuAdd_)(nil),
		(*UserFriendContext_GroupMenuAdd_)(nil),
		(*UserFriendContext_PullUsernameSearch_)(nil),
		(*UserFriendContext_SendToUsernameSearch_)(nil),
		(*UserFriendContext_LinkAttribution_)(nil),
		(*UserFriendContext_SuggestFriend_)(nil),
	}
	file_contactlist_v2_contact_list_common_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*UserFriendContext_GroupAddAll_ChatId)(nil),
	}
	file_contactlist_v2_contact_list_common_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*UserFriendContext_GroupInfoAdd_ChatId)(nil),
	}
	file_contactlist_v2_contact_list_common_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*UserFriendContext_GroupInfoMenuAdd_ChatId)(nil),
	}
	file_contactlist_v2_contact_list_common_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*UserFriendContext_GroupMenuAdd_ChatId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contactlist_v2_contact_list_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contactlist_v2_contact_list_common_proto_goTypes,
		DependencyIndexes: file_contactlist_v2_contact_list_common_proto_depIdxs,
		MessageInfos:      file_contactlist_v2_contact_list_common_proto_msgTypes,
	}.Build()
	File_contactlist_v2_contact_list_common_proto = out.File
	file_contactlist_v2_contact_list_common_proto_rawDesc = nil
	file_contactlist_v2_contact_list_common_proto_goTypes = nil
	file_contactlist_v2_contact_list_common_proto_depIdxs = nil
}
