// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: augmentum/v1/augmentum_event.proto

package augmentum

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_go "github.com/sokkit-io/xiphias-model-common/generated/go"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AugNullValue int32

const (
	AugNullValue_NULL_VALUE AugNullValue = 0
)

// Enum value maps for AugNullValue.
var (
	AugNullValue_name = map[int32]string{
		0: "NULL_VALUE",
	}
	AugNullValue_value = map[string]int32{
		"NULL_VALUE": 0,
	}
)

func (x AugNullValue) Enum() *AugNullValue {
	p := new(AugNullValue)
	*p = x
	return p
}

func (x AugNullValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AugNullValue) Descriptor() protoreflect.EnumDescriptor {
	return file_augmentum_v1_augmentum_event_proto_enumTypes[0].Descriptor()
}

func (AugNullValue) Type() protoreflect.EnumType {
	return &file_augmentum_v1_augmentum_event_proto_enumTypes[0]
}

func (x AugNullValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AugNullValue.Descriptor instead.
func (AugNullValue) EnumDescriptor() ([]byte, []int) {
	return file_augmentum_v1_augmentum_event_proto_rawDescGZIP(), []int{0}
}

// An augmentum event is uniquely identified by considering ALL of the 'timestamp', 'event',
// and 'instance_id' fields. ALL fields of the EventId message (event field) MUST be
// considered. An event CANNOT be identified uniquely if the instance_id is not set (see comments on
// field for additional details). ALL of these fields should be used when creating database primary
// keys.
//
// Currently (June 2016) the maximum size for an augmentum event is restricted 10k (INCLUDING
// fields added by the system during processing which MAY total a maximum of 2k) so ingestion
// endpoints and event producers should limit the maximum event size to 8k (ideally 4k). These
// maximums MAY be subject to increase in the future up to a hard limit of 100k per event (including
// a maximum of 10k added by the augmentum system).
//
// All fields are optional unless explicitly stated otherwise.
type AugmentumEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED
	//
	// By convention, when an event spans a time range, this should represent the END time.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// REQUIRED
	Event *AugmentumEvent_EventId `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	// NOT REQUIRED but SHOULD be set.
	//
	// Identifies a unique instance of an event, primarily used to de-duplicate data because of
	// Two Generals esque problems. See the comments on the AugmentumEvent message for additional
	// regarding how events are uniquely identified.
	//
	// The following guidelines apply to this field:
	//  - Setting this field is HIGHLY RECOMMENDED although not strictly required
	//  - If NOT set at the origin of the event, it SHOULD be set as early as possible
	//    in the data pipeline
	InstanceId *_go.XiUuid `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The LOCAL part of a users jid.
	UserJid *_go.XiBareUserJid `protobuf:"bytes,4,opt,name=user_jid,json=userJid,proto3" json:"user_jid,omitempty"`
	// This MUST be the UNPREFIXED device id.
	// ie: it MUST NOT start with CIP, CAN, etc.
	DeviceId string `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// AKA: message id
	PacketId *_go.XiUuid `protobuf:"bytes,6,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	// The LOCAL part of a group jid
	GroupJid *_go.XiGroupJid `protobuf:"bytes,7,opt,name=group_jid,json=groupJid,proto3" json:"group_jid,omitempty"`
	// Username MUST be treated in a case insensitive way.
	// Setting this field is necessary ONLY when the jid is unknown.
	// When set, this username SHOULD represent a real kik user.
	// DO NOT use this field when this username is known to not be a kik user
	// or possibly not be a kik user (for example: a 'username search' event).
	//
	// The Augmentum/ingestion system SHOULD convert this to a user jid (if possible).
	Username  string      `protobuf:"bytes,20,opt,name=username,proto3" json:"username,omitempty"`
	ContentId *_go.XiUuid `protobuf:"bytes,21,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	// An OAuthed email address used to access a service. A typical use case includes email for an authenticated user
	// accessing an internal tool.
	OauthedEmail string `protobuf:"bytes,22,opt,name=oauthed_email,json=oauthedEmail,proto3" json:"oauthed_email,omitempty"`
	// REQUIRED for origin mobile, OPTIONAL for others.
	//
	// When a user_jid or device_id is specified, this refers to the the Kik client version being
	// used.
	ClientVersion string `protobuf:"bytes,8,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	// REQUIRED for origin mobile, OPTIONAL for others
	//
	// When a user_jid or device_id is specified, this refers to the the Kik device type being
	// used.
	DevicePrefix _go.XiDeviceId_DevicePrefix `protobuf:"varint,9,opt,name=device_prefix,json=devicePrefix,proto3,enum=common.XiDeviceId_DevicePrefix" json:"device_prefix,omitempty"`
	// Common data:
	//  - Is conceptually equivalent to mixpanel super properties.
	//  - MAY be added to the event behind the scenes by the client library
	//  - SHOULD NOT be specific to a particular instance of an event.
	//
	// May be fairly arbitrary JSON (see AugStruct for restrictions though).
	CommonData *AugStruct `protobuf:"bytes,10,opt,name=common_data,json=commonData,proto3" json:"common_data,omitempty"`
	// Flexible and arbitrary data associated with this specific event.
	EventData *AugStruct `protobuf:"bytes,11,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
	// MUST NOT be set by even producers. This field is added by the Augmentum system directly.
	Augmentum *AugmentumEvent_AugmentumAttributes `protobuf:"bytes,12,opt,name=augmentum,proto3" json:"augmentum,omitempty"`
}

func (x *AugmentumEvent) Reset() {
	*x = AugmentumEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AugmentumEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AugmentumEvent) ProtoMessage() {}

func (x *AugmentumEvent) ProtoReflect() protoreflect.Message {
	mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AugmentumEvent.ProtoReflect.Descriptor instead.
func (*AugmentumEvent) Descriptor() ([]byte, []int) {
	return file_augmentum_v1_augmentum_event_proto_rawDescGZIP(), []int{0}
}

func (x *AugmentumEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AugmentumEvent) GetEvent() *AugmentumEvent_EventId {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *AugmentumEvent) GetInstanceId() *_go.XiUuid {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

func (x *AugmentumEvent) GetUserJid() *_go.XiBareUserJid {
	if x != nil {
		return x.UserJid
	}
	return nil
}

func (x *AugmentumEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *AugmentumEvent) GetPacketId() *_go.XiUuid {
	if x != nil {
		return x.PacketId
	}
	return nil
}

func (x *AugmentumEvent) GetGroupJid() *_go.XiGroupJid {
	if x != nil {
		return x.GroupJid
	}
	return nil
}

func (x *AugmentumEvent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AugmentumEvent) GetContentId() *_go.XiUuid {
	if x != nil {
		return x.ContentId
	}
	return nil
}

func (x *AugmentumEvent) GetOauthedEmail() string {
	if x != nil {
		return x.OauthedEmail
	}
	return ""
}

func (x *AugmentumEvent) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *AugmentumEvent) GetDevicePrefix() _go.XiDeviceId_DevicePrefix {
	if x != nil {
		return x.DevicePrefix
	}
	return _go.XiDeviceId_DevicePrefix(0)
}

func (x *AugmentumEvent) GetCommonData() *AugStruct {
	if x != nil {
		return x.CommonData
	}
	return nil
}

func (x *AugmentumEvent) GetEventData() *AugStruct {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *AugmentumEvent) GetAugmentum() *AugmentumEvent_AugmentumAttributes {
	if x != nil {
		return x.Augmentum
	}
	return nil
}

// This is a JSON object.
type AugStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]*AugValue `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AugStruct) Reset() {
	*x = AugStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AugStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AugStruct) ProtoMessage() {}

func (x *AugStruct) ProtoReflect() protoreflect.Message {
	mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AugStruct.ProtoReflect.Descriptor instead.
func (*AugStruct) Descriptor() ([]byte, []int) {
	return file_augmentum_v1_augmentum_event_proto_rawDescGZIP(), []int{1}
}

func (x *AugStruct) GetFields() map[string]*AugValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

type AugValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//	*AugValue_NullValue
	//	*AugValue_NumberValue
	//	*AugValue_StringValue
	//	*AugValue_BoolValue
	//	*AugValue_StructValue
	//	*AugValue_ListValue
	Kind isAugValue_Kind `protobuf_oneof:"kind"`
}

func (x *AugValue) Reset() {
	*x = AugValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AugValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AugValue) ProtoMessage() {}

func (x *AugValue) ProtoReflect() protoreflect.Message {
	mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AugValue.ProtoReflect.Descriptor instead.
func (*AugValue) Descriptor() ([]byte, []int) {
	return file_augmentum_v1_augmentum_event_proto_rawDescGZIP(), []int{2}
}

func (m *AugValue) GetKind() isAugValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *AugValue) GetNullValue() AugNullValue {
	if x, ok := x.GetKind().(*AugValue_NullValue); ok {
		return x.NullValue
	}
	return AugNullValue_NULL_VALUE
}

func (x *AugValue) GetNumberValue() float64 {
	if x, ok := x.GetKind().(*AugValue_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (x *AugValue) GetStringValue() string {
	if x, ok := x.GetKind().(*AugValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *AugValue) GetBoolValue() bool {
	if x, ok := x.GetKind().(*AugValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *AugValue) GetStructValue() *AugStruct {
	if x, ok := x.GetKind().(*AugValue_StructValue); ok {
		return x.StructValue
	}
	return nil
}

func (x *AugValue) GetListValue() *AugListValue {
	if x, ok := x.GetKind().(*AugValue_ListValue); ok {
		return x.ListValue
	}
	return nil
}

type isAugValue_Kind interface {
	isAugValue_Kind()
}

type AugValue_NullValue struct {
	NullValue AugNullValue `protobuf:"varint,1,opt,name=null_value,json=nullValue,proto3,enum=common.augmentum.v1.AugNullValue,oneof"`
}

type AugValue_NumberValue struct {
	NumberValue float64 `protobuf:"fixed64,2,opt,name=number_value,json=numberValue,proto3,oneof"`
}

type AugValue_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type AugValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type AugValue_StructValue struct {
	StructValue *AugStruct `protobuf:"bytes,5,opt,name=struct_value,json=structValue,proto3,oneof"`
}

type AugValue_ListValue struct {
	ListValue *AugListValue `protobuf:"bytes,6,opt,name=list_value,json=listValue,proto3,oneof"`
}

func (*AugValue_NullValue) isAugValue_Kind() {}

func (*AugValue_NumberValue) isAugValue_Kind() {}

func (*AugValue_StringValue) isAugValue_Kind() {}

func (*AugValue_BoolValue) isAugValue_Kind() {}

func (*AugValue_StructValue) isAugValue_Kind() {}

func (*AugValue_ListValue) isAugValue_Kind() {}

type AugListValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*AugValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AugListValue) Reset() {
	*x = AugListValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AugListValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AugListValue) ProtoMessage() {}

func (x *AugListValue) ProtoReflect() protoreflect.Message {
	mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AugListValue.ProtoReflect.Descriptor instead.
func (*AugListValue) Descriptor() ([]byte, []int) {
	return file_augmentum_v1_augmentum_event_proto_rawDescGZIP(), []int{3}
}

func (x *AugListValue) GetValues() []*AugValue {
	if x != nil {
		return x.Values
	}
	return nil
}

// All fields should be restricted to ensure compatibility with S3 object keys
// http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-key-guidelines-safe-characters
type AugmentumEvent_EventId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED
	//
	// Identifies the physical place the event was generated, specifically as it relates to
	// control of event naming (ex: dev team or codebase) plus the security and trust context.
	// Use the namespace field to provide additional context for where the event was generated.
	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	// HIGHLY RECOMMENDED be set
	//
	// Further identifies the place the event was generated within the context of the origin. It is up to the owners of the origin to
	// determine what makes sense for setting this field. This field MUST NOT be dynamic in any way (ie. it should not be constructed from
	// something whose output is not constant like timestamps, user input, usernames, JIDs, hostnames, IPs, URLs, etc). The following are
	// the standards adopted by server.
	//
	// For an event that is not intended for tracing or logging, the source code repository name is typically used to help structure the
	// namespace value. Parts of the repository name are used to start the namespace value, which can be optionally followed by dot
	// delimited strings. For example, Xiphias service repositories have the form xiphias-service-{name}. In this case, the namespace would
	// begin with {name}. For all other repositories, use the exact repository name. For larger repositories like kik-server, you may
	// want to break the namespace based on the context of its sub projects. For example, the core server project can use the namespace
	// kik-server.tigase, while the support site can use kik-server.support.
	//
	// Standards for request tracing and logging events are in the process of being finalized.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// REQUIRED
	//
	// The name of the event. It is up to the owners of the origin to determine what makes sense for setting this field.
	// This field MUST NOT be dynamic in any way (ie. it should not be constructed from something whose output is not
	// constant like timestamps, user input, usernames, JIDs, hostnames, IPs, URLs, etc).
	//
	// For an event that is not intended for tracing or logging, this is the value of an enum. For languages that don't
	// support enums, this can be a set of strings.
	//
	// Standards for request tracing and logging events are in the process of being finalized.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AugmentumEvent_EventId) Reset() {
	*x = AugmentumEvent_EventId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AugmentumEvent_EventId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AugmentumEvent_EventId) ProtoMessage() {}

func (x *AugmentumEvent_EventId) ProtoReflect() protoreflect.Message {
	mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AugmentumEvent_EventId.ProtoReflect.Descriptor instead.
func (*AugmentumEvent_EventId) Descriptor() ([]byte, []int) {
	return file_augmentum_v1_augmentum_event_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AugmentumEvent_EventId) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *AugmentumEvent_EventId) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AugmentumEvent_EventId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AugmentumEvent_AugmentumAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IngestionTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=ingestion_time,json=ingestionTime,proto3" json:"ingestion_time,omitempty"`
	// DEPRECATED - will be removed in the near future (injestion being an incorrect spelling)
	//
	// Should ONLY be used when delivering flattened events to the legacy augmentum-firehose-mobile
	// kinesis stream.
	//
	// Deprecated: Marked as deprecated in augmentum/v1/augmentum_event.proto.
	InjestionTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=injestion_time,json=injestionTime,proto3" json:"injestion_time,omitempty"`
	// The IP from which the event originated (may be either ipv4 or ipv6 style).
	SourceIp string `protobuf:"bytes,5,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
}

func (x *AugmentumEvent_AugmentumAttributes) Reset() {
	*x = AugmentumEvent_AugmentumAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AugmentumEvent_AugmentumAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AugmentumEvent_AugmentumAttributes) ProtoMessage() {}

func (x *AugmentumEvent_AugmentumAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_augmentum_v1_augmentum_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AugmentumEvent_AugmentumAttributes.ProtoReflect.Descriptor instead.
func (*AugmentumEvent_AugmentumAttributes) Descriptor() ([]byte, []int) {
	return file_augmentum_v1_augmentum_event_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AugmentumEvent_AugmentumAttributes) GetIngestionTime() *timestamp.Timestamp {
	if x != nil {
		return x.IngestionTime
	}
	return nil
}

// Deprecated: Marked as deprecated in augmentum/v1/augmentum_event.proto.
func (x *AugmentumEvent_AugmentumAttributes) GetInjestionTime() *timestamp.Timestamp {
	if x != nil {
		return x.InjestionTime
	}
	return nil
}

func (x *AugmentumEvent_AugmentumAttributes) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

var File_augmentum_v1_augmentum_event_proto protoreflect.FileDescriptor

var file_augmentum_v1_augmentum_event_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x0b, 0x0a, 0x0e, 0x41, 0x75,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xca, 0x9d, 0x25,
	0x02, 0x08, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x49,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02,
	0x08, 0x01, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x55, 0x75, 0x69, 0x64, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4a, 0x69, 0x64, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x17, 0xca, 0x9d, 0x25, 0x13, 0x08, 0x00, 0x12, 0x0b, 0x5e, 0x5b, 0x61, 0x2d, 0x66, 0x30, 0x2d,
	0x39, 0x5d, 0x2b, 0x24, 0x28, 0x08, 0x30, 0x40, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58,
	0x69, 0x55, 0x75, 0x69, 0x64, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64,
	0x12, 0x32, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x16, 0xca, 0x9d, 0x25, 0x12, 0x12, 0x0e, 0x5e, 0x5b, 0x5c, 0x77, 0x5c, 0x2e,
	0x5d, 0x7b, 0x32, 0x2c, 0x33, 0x30, 0x7d, 0x24, 0x30, 0x1e, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x58, 0x69, 0x55, 0x75, 0x69, 0x64, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x0d, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x64, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xca, 0x9d, 0x25, 0x2a,
	0x12, 0x25, 0x5e, 0x5b, 0x5c, 0x77, 0x5c, 0x2e, 0x5c, 0x2b, 0x5c, 0x2d, 0x5f, 0x5d, 0x2b, 0x40,
	0x5b, 0x5c, 0x77, 0x5c, 0x2e, 0x5d, 0x2b, 0x5c, 0x2e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a,
	0x5d, 0x7b, 0x32, 0x2c, 0x36, 0x7d, 0x24, 0x30, 0x80, 0x01, 0x52, 0x0c, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x56, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2f, 0xca, 0x9d, 0x25, 0x2b, 0x12, 0x27, 0x5e, 0x5c, 0x64, 0x2b, 0x5c, 0x2e, 0x5c, 0x64,
	0x2b, 0x5c, 0x2e, 0x5c, 0x64, 0x2b, 0x28, 0x5c, 0x2e, 0x5c, 0x64, 0x2b, 0x29, 0x3f, 0x28, 0x2d,
	0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x29, 0x3f, 0x24, 0x30,
	0x10, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x44, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x58, 0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x09, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x09, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x1a, 0x87, 0x02,
	0x0a, 0x07, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x7d, 0x0a, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x65, 0xca, 0x9d, 0x25, 0x61, 0x08,
	0x01, 0x12, 0x59, 0x5e, 0x28, 0x62, 0x6f, 0x74, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x7c, 0x62, 0x6f, 0x74, 0x73, 0x7c, 0x6b, 0x69, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x7c, 0x6b, 0x69, 0x6b, 0x78, 0x7c, 0x6b, 0x69, 0x6e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x7c,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x7c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x7c, 0x73, 0x70,
	0x61, 0x72, 0x74, 0x7c, 0x74, 0x65, 0x73, 0x74, 0x29, 0x28, 0x5c, 0x2e, 0x28, 0x74, 0x72, 0x61,
	0x63, 0x69, 0x6e, 0x67, 0x7c, 0x6c, 0x6f, 0x67, 0x29, 0x29, 0x3f, 0x24, 0x28, 0x04, 0x30, 0x40,
	0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x40, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xca, 0x9d, 0x25,
	0x1e, 0x12, 0x19, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x5b, 0x5c, 0x77, 0x5c,
	0x2e, 0x5c, 0x2d, 0x5d, 0x7b, 0x30, 0x2c, 0x35, 0x31, 0x31, 0x7d, 0x24, 0x30, 0x80, 0x04, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xca, 0x9d, 0x25, 0x23, 0x08, 0x01,
	0x12, 0x1a, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x5b, 0x5c, 0x77, 0x5c, 0x2e,
	0x5c, 0x2d, 0x20, 0x5d, 0x7b, 0x30, 0x2c, 0x35, 0x31, 0x31, 0x7d, 0x24, 0x28, 0x01, 0x30, 0x80,
	0x04, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xc4, 0x01, 0x0a, 0x13, 0x41, 0x75, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x75, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x41, 0x0a, 0x0e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x69, 0x6e, 0x6a, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x6a, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0x9d,
	0x25, 0x02, 0x30, 0x2d, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x22, 0xcf,
	0x01, 0x0a, 0x09, 0x41, 0x75, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x68, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x24, 0xd2, 0x9d, 0x25, 0x20, 0x12, 0x1a,
	0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f, 0x5c, 0x2d, 0x25, 0x5c,
	0x2e, 0x20, 0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x28, 0x01, 0x30, 0x40, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x58, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xd3, 0x02, 0x0a, 0x08, 0x41, 0x75, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x42, 0x0a,
	0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x67, 0x4e, 0x75, 0x6c, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0x9d,
	0x25, 0x03, 0x30, 0x80, 0x50, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x45, 0x0a, 0x0c, 0x41, 0x75, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2a, 0x1e, 0x0a,
	0x0c, 0x41, 0x75, 0x67, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x00, 0x42, 0x88, 0x01,
	0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x75, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x13, 0x41, 0x75, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x75, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b,
	0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x75, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0xa0,
	0x01, 0x01, 0xa2, 0x02, 0x03, 0x41, 0x55, 0x47, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_augmentum_v1_augmentum_event_proto_rawDescOnce sync.Once
	file_augmentum_v1_augmentum_event_proto_rawDescData = file_augmentum_v1_augmentum_event_proto_rawDesc
)

func file_augmentum_v1_augmentum_event_proto_rawDescGZIP() []byte {
	file_augmentum_v1_augmentum_event_proto_rawDescOnce.Do(func() {
		file_augmentum_v1_augmentum_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_augmentum_v1_augmentum_event_proto_rawDescData)
	})
	return file_augmentum_v1_augmentum_event_proto_rawDescData
}

var file_augmentum_v1_augmentum_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_augmentum_v1_augmentum_event_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_augmentum_v1_augmentum_event_proto_goTypes = []interface{}{
	(AugNullValue)(0),                          // 0: common.augmentum.v1.AugNullValue
	(*AugmentumEvent)(nil),                     // 1: common.augmentum.v1.AugmentumEvent
	(*AugStruct)(nil),                          // 2: common.augmentum.v1.AugStruct
	(*AugValue)(nil),                           // 3: common.augmentum.v1.AugValue
	(*AugListValue)(nil),                       // 4: common.augmentum.v1.AugListValue
	(*AugmentumEvent_EventId)(nil),             // 5: common.augmentum.v1.AugmentumEvent.EventId
	(*AugmentumEvent_AugmentumAttributes)(nil), // 6: common.augmentum.v1.AugmentumEvent.AugmentumAttributes
	nil,                              // 7: common.augmentum.v1.AugStruct.FieldsEntry
	(*timestamp.Timestamp)(nil),      // 8: google.protobuf.Timestamp
	(*_go.XiUuid)(nil),               // 9: common.XiUuid
	(*_go.XiBareUserJid)(nil),        // 10: common.XiBareUserJid
	(*_go.XiGroupJid)(nil),           // 11: common.XiGroupJid
	(_go.XiDeviceId_DevicePrefix)(0), // 12: common.XiDeviceId.DevicePrefix
}
var file_augmentum_v1_augmentum_event_proto_depIdxs = []int32{
	8,  // 0: common.augmentum.v1.AugmentumEvent.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 1: common.augmentum.v1.AugmentumEvent.event:type_name -> common.augmentum.v1.AugmentumEvent.EventId
	9,  // 2: common.augmentum.v1.AugmentumEvent.instance_id:type_name -> common.XiUuid
	10, // 3: common.augmentum.v1.AugmentumEvent.user_jid:type_name -> common.XiBareUserJid
	9,  // 4: common.augmentum.v1.AugmentumEvent.packet_id:type_name -> common.XiUuid
	11, // 5: common.augmentum.v1.AugmentumEvent.group_jid:type_name -> common.XiGroupJid
	9,  // 6: common.augmentum.v1.AugmentumEvent.content_id:type_name -> common.XiUuid
	12, // 7: common.augmentum.v1.AugmentumEvent.device_prefix:type_name -> common.XiDeviceId.DevicePrefix
	2,  // 8: common.augmentum.v1.AugmentumEvent.common_data:type_name -> common.augmentum.v1.AugStruct
	2,  // 9: common.augmentum.v1.AugmentumEvent.event_data:type_name -> common.augmentum.v1.AugStruct
	6,  // 10: common.augmentum.v1.AugmentumEvent.augmentum:type_name -> common.augmentum.v1.AugmentumEvent.AugmentumAttributes
	7,  // 11: common.augmentum.v1.AugStruct.fields:type_name -> common.augmentum.v1.AugStruct.FieldsEntry
	0,  // 12: common.augmentum.v1.AugValue.null_value:type_name -> common.augmentum.v1.AugNullValue
	2,  // 13: common.augmentum.v1.AugValue.struct_value:type_name -> common.augmentum.v1.AugStruct
	4,  // 14: common.augmentum.v1.AugValue.list_value:type_name -> common.augmentum.v1.AugListValue
	3,  // 15: common.augmentum.v1.AugListValue.values:type_name -> common.augmentum.v1.AugValue
	8,  // 16: common.augmentum.v1.AugmentumEvent.AugmentumAttributes.ingestion_time:type_name -> google.protobuf.Timestamp
	8,  // 17: common.augmentum.v1.AugmentumEvent.AugmentumAttributes.injestion_time:type_name -> google.protobuf.Timestamp
	3,  // 18: common.augmentum.v1.AugStruct.FieldsEntry.value:type_name -> common.augmentum.v1.AugValue
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_augmentum_v1_augmentum_event_proto_init() }
func file_augmentum_v1_augmentum_event_proto_init() {
	if File_augmentum_v1_augmentum_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_augmentum_v1_augmentum_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AugmentumEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_augmentum_v1_augmentum_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AugStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_augmentum_v1_augmentum_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AugValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_augmentum_v1_augmentum_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AugListValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_augmentum_v1_augmentum_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AugmentumEvent_EventId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_augmentum_v1_augmentum_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AugmentumEvent_AugmentumAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_augmentum_v1_augmentum_event_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AugValue_NullValue)(nil),
		(*AugValue_NumberValue)(nil),
		(*AugValue_StringValue)(nil),
		(*AugValue_BoolValue)(nil),
		(*AugValue_StructValue)(nil),
		(*AugValue_ListValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_augmentum_v1_augmentum_event_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_augmentum_v1_augmentum_event_proto_goTypes,
		DependencyIndexes: file_augmentum_v1_augmentum_event_proto_depIdxs,
		EnumInfos:         file_augmentum_v1_augmentum_event_proto_enumTypes,
		MessageInfos:      file_augmentum_v1_augmentum_event_proto_msgTypes,
	}.Build()
	File_augmentum_v1_augmentum_event_proto = out.File
	file_augmentum_v1_augmentum_event_proto_rawDesc = nil
	file_augmentum_v1_augmentum_event_proto_goTypes = nil
	file_augmentum_v1_augmentum_event_proto_depIdxs = nil
}
