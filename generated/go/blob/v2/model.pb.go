// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: blob/v2/model.proto

package blob

import (
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlobType int32

const (
	// Original represents the original "source" of the content. It is often the
	// highest 'fidelity' setting for media content. It may not be the uploaded
	// source, however.
	//
	// The current (2018-11-14) reason for ORIGINAL not necessarily being the
	// uploaded source is for law enforcement and how systems currently process
	// uploads. Law enforcement often already has access to the files, and may
	// want to verify that that specific file was sent, or other such queries
	// that relate to the uploaded source. However, most upload systems don't
	// currently store the upload source, but instead performs various
	// transformations before storing it, which can change certain identifiers
	// such as the MD5.
	//
	// In the future, upload systems could potentially also store the upload
	// source directly, in which case ORIGINAL would represent that type. To
	// non-internal consumers of blobs (e.g. the clients), there isn't a
	// distinction between ORIGINAL and UPLOAD_SOURCE. Internal systems that
	// care can retrieve the original source metadata via
	// UserGeneratedBlobDetails (note: service / systems still need to be put
	// in place to access it, but legacy systems tend to have this information
	// in other formats).
	BlobType_ORIGINAL BlobType = 0
	// Preview represents a "smaller" version of ORIGINAL, which should be used
	// in "preview" settings. Examples include image thumbnails, small persona
	// pics in chat lists, etc
	BlobType_PREVIEW BlobType = 1
)

// Enum value maps for BlobType.
var (
	BlobType_name = map[int32]string{
		0: "ORIGINAL",
		1: "PREVIEW",
	}
	BlobType_value = map[string]int32{
		"ORIGINAL": 0,
		"PREVIEW":  1,
	}
)

func (x BlobType) Enum() *BlobType {
	p := new(BlobType)
	*p = x
	return p
}

func (x BlobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlobType) Descriptor() protoreflect.EnumDescriptor {
	return file_blob_v2_model_proto_enumTypes[0].Descriptor()
}

func (BlobType) Type() protoreflect.EnumType {
	return &file_blob_v2_model_proto_enumTypes[0]
}

func (x BlobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlobType.Descriptor instead.
func (BlobType) EnumDescriptor() ([]byte, []int) {
	return file_blob_v2_model_proto_rawDescGZIP(), []int{0}
}

type MediaType int32

const (
	MediaType_UKNOWN     MediaType = 0
	MediaType_IMAGE_JPEG MediaType = 1
	MediaType_IMAGE_PNG  MediaType = 2
	MediaType_VIDEO_MP4  MediaType = 3
	MediaType_VIDEO_WEBM MediaType = 4
	MediaType_IMAGE_GIF  MediaType = 5
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "UKNOWN",
		1: "IMAGE_JPEG",
		2: "IMAGE_PNG",
		3: "VIDEO_MP4",
		4: "VIDEO_WEBM",
		5: "IMAGE_GIF",
	}
	MediaType_value = map[string]int32{
		"UKNOWN":     0,
		"IMAGE_JPEG": 1,
		"IMAGE_PNG":  2,
		"VIDEO_MP4":  3,
		"VIDEO_WEBM": 4,
		"IMAGE_GIF":  5,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_blob_v2_model_proto_enumTypes[1].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_blob_v2_model_proto_enumTypes[1]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_blob_v2_model_proto_rawDescGZIP(), []int{1}
}

// BlobReference refers to a conceptual blob of data that can be retrieved in
// various ways. A BlobReference will contain one or more BlobUrls which provides
// URLs to access various versions of the conceptual blob.
type BlobReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the blob, which is universally unique.
	//
	// The ID is what should be used with respect to invalidation or any type
	// of moderation.
	Id *BlobReference_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Note: The set of BlobUrl's doesn't have a strict min validation
	// since some generators of BlobReferences don't have the authority
	// or information to generate the set of BlobUrls. The ingestion
	// services will fill the BlobUrl's out. However, when being
	// passed to clients that are expecting to resolve a BlobReference,
	// at least one BlobUrl should set.
	Urls []*BlobUrl `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *BlobReference) Reset() {
	*x = BlobReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blob_v2_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobReference) ProtoMessage() {}

func (x *BlobReference) ProtoReflect() protoreflect.Message {
	mi := &file_blob_v2_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobReference.ProtoReflect.Descriptor instead.
func (*BlobReference) Descriptor() ([]byte, []int) {
	return file_blob_v2_model_proto_rawDescGZIP(), []int{0}
}

func (x *BlobReference) GetId() *BlobReference_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BlobReference) GetUrls() []*BlobUrl {
	if x != nil {
		return x.Urls
	}
	return nil
}

// BlobUrl represents the required URL and metadata to retrieve a specific
// version.
type BlobUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The location at which the blob can be retrieved.
	// Currently only http / https schemes are supported.
	//
	// Note: we explicitly don't encode domains into the validation due to
	// the various amounts of internal / staging domains that exist.
	// Implementations should do further validation on domains if necessary.
	Url       string    `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	BlobType  BlobType  `protobuf:"varint,2,opt,name=blob_type,json=blobType,proto3,enum=common.blob.v2.BlobType" json:"blob_type,omitempty"`
	MediaType MediaType `protobuf:"varint,3,opt,name=media_type,json=mediaType,proto3,enum=common.blob.v2.MediaType" json:"media_type,omitempty"`
}

func (x *BlobUrl) Reset() {
	*x = BlobUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blob_v2_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobUrl) ProtoMessage() {}

func (x *BlobUrl) ProtoReflect() protoreflect.Message {
	mi := &file_blob_v2_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobUrl.ProtoReflect.Descriptor instead.
func (*BlobUrl) Descriptor() ([]byte, []int) {
	return file_blob_v2_model_proto_rawDescGZIP(), []int{1}
}

func (x *BlobUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BlobUrl) GetBlobType() BlobType {
	if x != nil {
		return x.BlobType
	}
	return BlobType_ORIGINAL
}

func (x *BlobUrl) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_UKNOWN
}

// UserGeneratedBlobDetails contains extra metadata about a blob that was
// generated by a "user" or potentially "third party" source. The details
// are obtained upon ingestion (i.e. content/profilepic/asset/etc upload),
// and are intended to be available for internal services, such as content
// moderation.
type UserGeneratedBlobDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional; the original file name (including the extension, if applicable)
	// of the blob being uploaded
	//
	// Useful for law enforcement.
	OriginalFileName string `protobuf:"bytes,1,opt,name=original_file_name,json=originalFileName,proto3" json:"original_file_name,omitempty"`
	// The MD5 hash of the user supplied blob being uploaded. This may not
	// be the same MD5 as the <BlobType::ORIGINAL, BlobReference> pairing,
	// since that pairing may be the server stored / post-processed blob.
	//
	// Useful for moderation and law enforcement.
	Md5 []byte `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *UserGeneratedBlobDetails) Reset() {
	*x = UserGeneratedBlobDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blob_v2_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGeneratedBlobDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGeneratedBlobDetails) ProtoMessage() {}

func (x *UserGeneratedBlobDetails) ProtoReflect() protoreflect.Message {
	mi := &file_blob_v2_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGeneratedBlobDetails.ProtoReflect.Descriptor instead.
func (*UserGeneratedBlobDetails) Descriptor() ([]byte, []int) {
	return file_blob_v2_model_proto_rawDescGZIP(), []int{2}
}

func (x *UserGeneratedBlobDetails) GetOriginalFileName() string {
	if x != nil {
		return x.OriginalFileName
	}
	return ""
}

func (x *UserGeneratedBlobDetails) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

type BlobReference_Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawValue []byte `protobuf:"bytes,1,opt,name=raw_value,json=rawValue,proto3" json:"raw_value,omitempty"`
}

func (x *BlobReference_Id) Reset() {
	*x = BlobReference_Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blob_v2_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobReference_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobReference_Id) ProtoMessage() {}

func (x *BlobReference_Id) ProtoReflect() protoreflect.Message {
	mi := &file_blob_v2_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobReference_Id.ProtoReflect.Descriptor instead.
func (*BlobReference_Id) Descriptor() ([]byte, []int) {
	return file_blob_v2_model_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BlobReference_Id) GetRawValue() []byte {
	if x != nil {
		return x.RawValue
	}
	return nil
}

var File_blob_v2_model_proto protoreflect.FileDescriptor

var file_blob_v2_model_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x6c, 0x6f, 0x62, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x2e, 0x76, 0x32, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x38, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x32, 0x2e,
	0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x64,
	0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04,
	0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x6c, 0x6f, 0x62,
	0x55, 0x72, 0x6c, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05, 0x78, 0x00, 0x80, 0x01, 0x20, 0x52, 0x04,
	0x75, 0x72, 0x6c, 0x73, 0x1a, 0x2e, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x72, 0x61,
	0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0b, 0xca,
	0x9d, 0x25, 0x07, 0x08, 0x01, 0x28, 0x10, 0x30, 0x80, 0x01, 0x52, 0x08, 0x72, 0x61, 0x77, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x62, 0x55, 0x72, 0x6c,
	0x12, 0x2f, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xca,
	0x9d, 0x25, 0x19, 0x08, 0x01, 0x12, 0x12, 0x5e, 0x28, 0x68, 0x74, 0x74, 0x70, 0x7c, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x29, 0x3a, 0x2f, 0x2f, 0x2e, 0x2b, 0x30, 0x80, 0x02, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x35, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x62, 0x6c, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x6f, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x35,
	0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0x9d, 0x25, 0x03,
	0x30, 0x80, 0x02, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x0a, 0xca, 0x9d, 0x25, 0x06, 0x08, 0x00, 0x28, 0x10, 0x30, 0x10, 0x52, 0x03,
	0x6d, 0x64, 0x35, 0x2a, 0x25, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x2a, 0x64, 0x0a, 0x09, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x4a, 0x50, 0x45,
	0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x4d, 0x50, 0x34, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x57, 0x45, 0x42, 0x4d, 0x10,
	0x04, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x49, 0x46, 0x10, 0x05,
	0x42, 0x6c, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x67, 0x65, 0x6e, 0x2e,
	0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x32, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69,
	0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f,
	0x62, 0x6c, 0x6f, 0x62, 0x2f, 0x76, 0x32, 0x3b, 0x62, 0x6c, 0x6f, 0x62, 0xa2, 0x02, 0x0f, 0x4b,
	0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x56, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blob_v2_model_proto_rawDescOnce sync.Once
	file_blob_v2_model_proto_rawDescData = file_blob_v2_model_proto_rawDesc
)

func file_blob_v2_model_proto_rawDescGZIP() []byte {
	file_blob_v2_model_proto_rawDescOnce.Do(func() {
		file_blob_v2_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_blob_v2_model_proto_rawDescData)
	})
	return file_blob_v2_model_proto_rawDescData
}

var file_blob_v2_model_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_blob_v2_model_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_blob_v2_model_proto_goTypes = []interface{}{
	(BlobType)(0),                    // 0: common.blob.v2.BlobType
	(MediaType)(0),                   // 1: common.blob.v2.MediaType
	(*BlobReference)(nil),            // 2: common.blob.v2.BlobReference
	(*BlobUrl)(nil),                  // 3: common.blob.v2.BlobUrl
	(*UserGeneratedBlobDetails)(nil), // 4: common.blob.v2.UserGeneratedBlobDetails
	(*BlobReference_Id)(nil),         // 5: common.blob.v2.BlobReference.Id
}
var file_blob_v2_model_proto_depIdxs = []int32{
	5, // 0: common.blob.v2.BlobReference.id:type_name -> common.blob.v2.BlobReference.Id
	3, // 1: common.blob.v2.BlobReference.urls:type_name -> common.blob.v2.BlobUrl
	0, // 2: common.blob.v2.BlobUrl.blob_type:type_name -> common.blob.v2.BlobType
	1, // 3: common.blob.v2.BlobUrl.media_type:type_name -> common.blob.v2.MediaType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_blob_v2_model_proto_init() }
func file_blob_v2_model_proto_init() {
	if File_blob_v2_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blob_v2_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blob_v2_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blob_v2_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGeneratedBlobDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blob_v2_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobReference_Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blob_v2_model_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blob_v2_model_proto_goTypes,
		DependencyIndexes: file_blob_v2_model_proto_depIdxs,
		EnumInfos:         file_blob_v2_model_proto_enumTypes,
		MessageInfos:      file_blob_v2_model_proto_msgTypes,
	}.Build()
	File_blob_v2_model_proto = out.File
	file_blob_v2_model_proto_rawDesc = nil
	file_blob_v2_model_proto_goTypes = nil
	file_blob_v2_model_proto_depIdxs = nil
}
