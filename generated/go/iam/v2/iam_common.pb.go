// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: iam/v2/iam_common.proto

package iam

import (
	v2 "github.com/sokkit-io/xiphias-model-common/generated/go/common/v2"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The set of credentials when a user logs in using their username
type UsernameCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username *v2.Username `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// The username-derived passkey as described in https://github.com/sokkit-io/kik-product/wiki/Passkeys
	Passkey []byte `protobuf:"bytes,2,opt,name=passkey,proto3" json:"passkey,omitempty"`
}

func (x *UsernameCredentials) Reset() {
	*x = UsernameCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v2_iam_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsernameCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsernameCredentials) ProtoMessage() {}

func (x *UsernameCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v2_iam_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsernameCredentials.ProtoReflect.Descriptor instead.
func (*UsernameCredentials) Descriptor() ([]byte, []int) {
	return file_iam_v2_iam_common_proto_rawDescGZIP(), []int{0}
}

func (x *UsernameCredentials) GetUsername() *v2.Username {
	if x != nil {
		return x.Username
	}
	return nil
}

func (x *UsernameCredentials) GetPasskey() []byte {
	if x != nil {
		return x.Passkey
	}
	return nil
}

// The set of credentials when a user logs in using their email address
type EmailCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email *v2.Email `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The email-derived passkey as described in https://github.com/sokkit-io/kik-product/wiki/Passkeys
	Passkey []byte `protobuf:"bytes,2,opt,name=passkey,proto3" json:"passkey,omitempty"`
}

func (x *EmailCredentials) Reset() {
	*x = EmailCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v2_iam_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailCredentials) ProtoMessage() {}

func (x *EmailCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v2_iam_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailCredentials.ProtoReflect.Descriptor instead.
func (*EmailCredentials) Descriptor() ([]byte, []int) {
	return file_iam_v2_iam_common_proto_rawDescGZIP(), []int{1}
}

func (x *EmailCredentials) GetEmail() *v2.Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *EmailCredentials) GetPasskey() []byte {
	if x != nil {
		return x.Passkey
	}
	return nil
}

var File_iam_v2_iam_common_proto protoreflect.FileDescriptor

var file_iam_v2_iam_common_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x13, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x70, 0x61,
	0x73, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xca, 0x9d, 0x25,
	0x05, 0x08, 0x01, 0x30, 0x80, 0x08, 0x52, 0x07, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x22,
	0x67, 0x0a, 0x10, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x07, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05, 0x08, 0x01, 0x30, 0x80, 0x08, 0x52,
	0x07, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x42, 0x68, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x69, 0x6b, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x5a, 0x41,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69,
	0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x32, 0x3b, 0x69, 0x61,
	0x6d, 0xa2, 0x02, 0x0e, 0x4b, 0x50, 0x42, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x61, 0x6d,
	0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iam_v2_iam_common_proto_rawDescOnce sync.Once
	file_iam_v2_iam_common_proto_rawDescData = file_iam_v2_iam_common_proto_rawDesc
)

func file_iam_v2_iam_common_proto_rawDescGZIP() []byte {
	file_iam_v2_iam_common_proto_rawDescOnce.Do(func() {
		file_iam_v2_iam_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_iam_v2_iam_common_proto_rawDescData)
	})
	return file_iam_v2_iam_common_proto_rawDescData
}

var file_iam_v2_iam_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_iam_v2_iam_common_proto_goTypes = []interface{}{
	(*UsernameCredentials)(nil), // 0: common.iam.v2.UsernameCredentials
	(*EmailCredentials)(nil),    // 1: common.iam.v2.EmailCredentials
	(*v2.Username)(nil),         // 2: common.v2.Username
	(*v2.Email)(nil),            // 3: common.v2.Email
}
var file_iam_v2_iam_common_proto_depIdxs = []int32{
	2, // 0: common.iam.v2.UsernameCredentials.username:type_name -> common.v2.Username
	3, // 1: common.iam.v2.EmailCredentials.email:type_name -> common.v2.Email
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_iam_v2_iam_common_proto_init() }
func file_iam_v2_iam_common_proto_init() {
	if File_iam_v2_iam_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iam_v2_iam_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsernameCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v2_iam_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iam_v2_iam_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_iam_v2_iam_common_proto_goTypes,
		DependencyIndexes: file_iam_v2_iam_common_proto_depIdxs,
		MessageInfos:      file_iam_v2_iam_common_proto_msgTypes,
	}.Build()
	File_iam_v2_iam_common_proto = out.File
	file_iam_v2_iam_common_proto_rawDesc = nil
	file_iam_v2_iam_common_proto_goTypes = nil
	file_iam_v2_iam_common_proto_depIdxs = nil
}
