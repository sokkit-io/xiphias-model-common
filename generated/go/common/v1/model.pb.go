// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: common/v1/model.proto

package common

import (
	_go "github.com/sokkit-io/xiphias-model-common/generated/go"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Follows the form <cryptographic hash>_a@talk.kik.com, ex., abcdefCDEF01234567890123456789-_-_-_ghijkGHIJKxyz_a@talk.kik.com
// You can use an alias jid when you want to hide real jids from users. Consider the case of people spamming members
// of public groups. The spammer joins the group and would normally get all the real jids of the group members.
// There's nothing in our system that can prevent the spammer from sending unwanted messaging at that point.
// By using an alias jid, the spammer won't get the real jids right away but instead would only get an alias jid.
// We can then use that to control whether or not we want to give over the real jid that is associated with that alias
// jid. The real jid/s is/are encrypted here as part of the local_part below and it should be difficult for hackers
// or spammer to reverse that. A reverse look-up table of alias jids to real jids will be maintained elsewhere.
// Also, and given real jids x, y, and z, they should always map to the same alias jid.
// Alis Jid Mapper Service: https://github.com/sokkit-io/xiphias-service-alias-jid-mapper
type XiAliasJid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalPart string `protobuf:"bytes,1,opt,name=local_part,json=localPart,proto3" json:"local_part,omitempty"`
}

func (x *XiAliasJid) Reset() {
	*x = XiAliasJid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XiAliasJid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XiAliasJid) ProtoMessage() {}

func (x *XiAliasJid) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XiAliasJid.ProtoReflect.Descriptor instead.
func (*XiAliasJid) Descriptor() ([]byte, []int) {
	return file_common_v1_model_proto_rawDescGZIP(), []int{0}
}

func (x *XiAliasJid) GetLocalPart() string {
	if x != nil {
		return x.LocalPart
	}
	return ""
}

type XiBareUserJidOrAliasJid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to JidType:
	//	*XiBareUserJidOrAliasJid_BareUserJid
	//	*XiBareUserJidOrAliasJid_AliasUserJid
	JidType isXiBareUserJidOrAliasJid_JidType `protobuf_oneof:"jid_type"`
}

func (x *XiBareUserJidOrAliasJid) Reset() {
	*x = XiBareUserJidOrAliasJid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XiBareUserJidOrAliasJid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XiBareUserJidOrAliasJid) ProtoMessage() {}

func (x *XiBareUserJidOrAliasJid) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XiBareUserJidOrAliasJid.ProtoReflect.Descriptor instead.
func (*XiBareUserJidOrAliasJid) Descriptor() ([]byte, []int) {
	return file_common_v1_model_proto_rawDescGZIP(), []int{1}
}

func (m *XiBareUserJidOrAliasJid) GetJidType() isXiBareUserJidOrAliasJid_JidType {
	if m != nil {
		return m.JidType
	}
	return nil
}

func (x *XiBareUserJidOrAliasJid) GetBareUserJid() *_go.XiBareUserJid {
	if x, ok := x.GetJidType().(*XiBareUserJidOrAliasJid_BareUserJid); ok {
		return x.BareUserJid
	}
	return nil
}

func (x *XiBareUserJidOrAliasJid) GetAliasUserJid() *XiAliasJid {
	if x, ok := x.GetJidType().(*XiBareUserJidOrAliasJid_AliasUserJid); ok {
		return x.AliasUserJid
	}
	return nil
}

type isXiBareUserJidOrAliasJid_JidType interface {
	isXiBareUserJidOrAliasJid_JidType()
}

type XiBareUserJidOrAliasJid_BareUserJid struct {
	BareUserJid *_go.XiBareUserJid `protobuf:"bytes,1,opt,name=bare_user_jid,json=bareUserJid,proto3,oneof"`
}

type XiBareUserJidOrAliasJid_AliasUserJid struct {
	AliasUserJid *XiAliasJid `protobuf:"bytes,2,opt,name=alias_user_jid,json=aliasUserJid,proto3,oneof"`
}

func (*XiBareUserJidOrAliasJid_BareUserJid) isXiBareUserJidOrAliasJid_JidType() {}

func (*XiBareUserJidOrAliasJid_AliasUserJid) isXiBareUserJidOrAliasJid_JidType() {}

type XiAnyJid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to JidType:
	//	*XiAnyJid_BareUserJid
	//	*XiAnyJid_AliasUserJid
	//	*XiAnyJid_GroupJid
	JidType isXiAnyJid_JidType `protobuf_oneof:"jid_type"`
}

func (x *XiAnyJid) Reset() {
	*x = XiAnyJid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XiAnyJid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XiAnyJid) ProtoMessage() {}

func (x *XiAnyJid) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XiAnyJid.ProtoReflect.Descriptor instead.
func (*XiAnyJid) Descriptor() ([]byte, []int) {
	return file_common_v1_model_proto_rawDescGZIP(), []int{2}
}

func (m *XiAnyJid) GetJidType() isXiAnyJid_JidType {
	if m != nil {
		return m.JidType
	}
	return nil
}

func (x *XiAnyJid) GetBareUserJid() *_go.XiBareUserJid {
	if x, ok := x.GetJidType().(*XiAnyJid_BareUserJid); ok {
		return x.BareUserJid
	}
	return nil
}

func (x *XiAnyJid) GetAliasUserJid() *XiAliasJid {
	if x, ok := x.GetJidType().(*XiAnyJid_AliasUserJid); ok {
		return x.AliasUserJid
	}
	return nil
}

func (x *XiAnyJid) GetGroupJid() *_go.XiGroupJid {
	if x, ok := x.GetJidType().(*XiAnyJid_GroupJid); ok {
		return x.GroupJid
	}
	return nil
}

type isXiAnyJid_JidType interface {
	isXiAnyJid_JidType()
}

type XiAnyJid_BareUserJid struct {
	BareUserJid *_go.XiBareUserJid `protobuf:"bytes,1,opt,name=bare_user_jid,json=bareUserJid,proto3,oneof"`
}

type XiAnyJid_AliasUserJid struct {
	AliasUserJid *XiAliasJid `protobuf:"bytes,2,opt,name=alias_user_jid,json=aliasUserJid,proto3,oneof"`
}

type XiAnyJid_GroupJid struct {
	GroupJid *_go.XiGroupJid `protobuf:"bytes,3,opt,name=group_jid,json=groupJid,proto3,oneof"`
}

func (*XiAnyJid_BareUserJid) isXiAnyJid_JidType() {}

func (*XiAnyJid_AliasUserJid) isXiAnyJid_JidType() {}

func (*XiAnyJid_GroupJid) isXiAnyJid_JidType() {}

// For user-to-user in public groups, we rely on JWTs for executing and verifying transactions
// The user-to-user payment JWT include both the sender and recipient IDs. In order to preserve privacy controls in
// public groups, these IDs will be a hashed version of the user real JID. It'll be called the Kin User ID
// Much like alias jids, the sender cannot use the KIN user ID to directly message the recipient in a public group
// Also, the KIN user ID is used to map clients to their wallet addresses on the blockchain
// The KIN user ID is included on the user profile. It is 32-bit encoded string
type XiKinUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *XiKinUserId) Reset() {
	*x = XiKinUserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XiKinUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XiKinUserId) ProtoMessage() {}

func (x *XiKinUserId) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XiKinUserId.ProtoReflect.Descriptor instead.
func (*XiKinUserId) Descriptor() ([]byte, []int) {
	return file_common_v1_model_proto_rawDescGZIP(), []int{3}
}

func (x *XiKinUserId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// *************************************************************************************************
// Convo Identifier
// *************************************************************************************************
type XiConvoId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//	*XiConvoId_OneToOne
	//	*XiConvoId_Group
	Kind isXiConvoId_Kind `protobuf_oneof:"kind"`
}

func (x *XiConvoId) Reset() {
	*x = XiConvoId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XiConvoId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XiConvoId) ProtoMessage() {}

func (x *XiConvoId) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XiConvoId.ProtoReflect.Descriptor instead.
func (*XiConvoId) Descriptor() ([]byte, []int) {
	return file_common_v1_model_proto_rawDescGZIP(), []int{4}
}

func (m *XiConvoId) GetKind() isXiConvoId_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *XiConvoId) GetOneToOne() *OneToOneConvoId {
	if x, ok := x.GetKind().(*XiConvoId_OneToOne); ok {
		return x.OneToOne
	}
	return nil
}

func (x *XiConvoId) GetGroup() *_go.XiGroupJid {
	if x, ok := x.GetKind().(*XiConvoId_Group); ok {
		return x.Group
	}
	return nil
}

type isXiConvoId_Kind interface {
	isXiConvoId_Kind()
}

type XiConvoId_OneToOne struct {
	OneToOne *OneToOneConvoId `protobuf:"bytes,1,opt,name=one_to_one,json=oneToOne,proto3,oneof"`
}

type XiConvoId_Group struct {
	Group *_go.XiGroupJid `protobuf:"bytes,2,opt,name=group,proto3,oneof"`
}

func (*XiConvoId_OneToOne) isXiConvoId_Kind() {}

func (*XiConvoId_Group) isXiConvoId_Kind() {}

// OneToOneConvoId should contain the two convo partners' userjids that are
// sorted in a consistent way.
type OneToOneConvoId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*_go.XiBareUserJid `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *OneToOneConvoId) Reset() {
	*x = OneToOneConvoId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneToOneConvoId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneToOneConvoId) ProtoMessage() {}

func (x *OneToOneConvoId) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneToOneConvoId.ProtoReflect.Descriptor instead.
func (*OneToOneConvoId) Descriptor() ([]byte, []int) {
	return file_common_v1_model_proto_rawDescGZIP(), []int{5}
}

func (x *OneToOneConvoId) GetUsers() []*_go.XiBareUserJid {
	if x != nil {
		return x.Users
	}
	return nil
}

type XiJWT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt string `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *XiJWT) Reset() {
	*x = XiJWT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XiJWT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XiJWT) ProtoMessage() {}

func (x *XiJWT) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XiJWT.ProtoReflect.Descriptor instead.
func (*XiJWT) Descriptor() ([]byte, []int) {
	return file_common_v1_model_proto_rawDescGZIP(), []int{6}
}

func (x *XiJWT) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

var File_common_v1_model_proto protoreflect.FileDescriptor

var file_common_v1_model_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x1a, 0x11, 0x6b, 0x69, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x0a, 0x58, 0x69, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4a,
	0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xca, 0x9d, 0x25, 0x1a, 0x08, 0x01, 0x12, 0x16,
	0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5f, 0x2d, 0x5d, 0x7b, 0x35, 0x32, 0x7d, 0x5f,
	0x5b, 0x61, 0x7c, 0x62, 0x5d, 0x24, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x72,
	0x74, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4a, 0x69, 0x64, 0x4f, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4a, 0x69, 0x64, 0x12, 0x3b, 0x0a,
	0x0d, 0x62, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69,
	0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x62,
	0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x58,
	0x69, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4a, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x6a, 0x69, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x08, 0x58, 0x69, 0x41, 0x6e, 0x79, 0x4a,
	0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x62, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64,
	0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x12,
	0x3d, 0x0a, 0x0e, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6a, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x58, 0x69, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4a, 0x69, 0x64, 0x48, 0x00,
	0x52, 0x0c, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x12, 0x31,
	0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4a, 0x69, 0x64, 0x48, 0x00, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69,
	0x64, 0x42, 0x0a, 0x0a, 0x08, 0x6a, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a,
	0x0b, 0x58, 0x69, 0x4b, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xca, 0x9d, 0x25, 0x12, 0x08, 0x01,
	0x12, 0x0e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x32, 0x2d, 0x37, 0x5d, 0x7b, 0x35, 0x32, 0x7d, 0x24,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x09, 0x58, 0x69, 0x43, 0x6f, 0x6e, 0x76, 0x6f, 0x49,
	0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x6f, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64,
	0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x22, 0x4e, 0x0a, 0x0f, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x6f, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42,
	0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x42, 0x0e, 0xca, 0x9d, 0x25, 0x0a,
	0x08, 0x01, 0x78, 0x02, 0x80, 0x01, 0x02, 0x88, 0x01, 0x00, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x22, 0x54, 0x0a, 0x05, 0x58, 0x69, 0x4a, 0x57, 0x54, 0x12, 0x4b, 0x0a, 0x03, 0x6a, 0x77,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x39, 0xca, 0x9d, 0x25, 0x35, 0x08, 0x01, 0x12,
	0x31, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x2d, 0x5f, 0x5d, 0x2b,
	0x3f, 0x2e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x2d, 0x5f, 0x5d, 0x2b,
	0x3f, 0x2e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x2d, 0x5f, 0x5d, 0x2b,
	0x3f, 0x24, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x42, 0x76, 0xaa, 0xa3, 0x2a, 0x02, 0x08, 0x01, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42,
	0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69, 0x74,
	0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xa0, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x4b, 0x50, 0x42, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_model_proto_rawDescOnce sync.Once
	file_common_v1_model_proto_rawDescData = file_common_v1_model_proto_rawDesc
)

func file_common_v1_model_proto_rawDescGZIP() []byte {
	file_common_v1_model_proto_rawDescOnce.Do(func() {
		file_common_v1_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_model_proto_rawDescData)
	})
	return file_common_v1_model_proto_rawDescData
}

var file_common_v1_model_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_common_v1_model_proto_goTypes = []interface{}{
	(*XiAliasJid)(nil),              // 0: common.v1.XiAliasJid
	(*XiBareUserJidOrAliasJid)(nil), // 1: common.v1.XiBareUserJidOrAliasJid
	(*XiAnyJid)(nil),                // 2: common.v1.XiAnyJid
	(*XiKinUserId)(nil),             // 3: common.v1.XiKinUserId
	(*XiConvoId)(nil),               // 4: common.v1.XiConvoId
	(*OneToOneConvoId)(nil),         // 5: common.v1.OneToOneConvoId
	(*XiJWT)(nil),                   // 6: common.v1.XiJWT
	(*_go.XiBareUserJid)(nil),       // 7: common.XiBareUserJid
	(*_go.XiGroupJid)(nil),          // 8: common.XiGroupJid
}
var file_common_v1_model_proto_depIdxs = []int32{
	7, // 0: common.v1.XiBareUserJidOrAliasJid.bare_user_jid:type_name -> common.XiBareUserJid
	0, // 1: common.v1.XiBareUserJidOrAliasJid.alias_user_jid:type_name -> common.v1.XiAliasJid
	7, // 2: common.v1.XiAnyJid.bare_user_jid:type_name -> common.XiBareUserJid
	0, // 3: common.v1.XiAnyJid.alias_user_jid:type_name -> common.v1.XiAliasJid
	8, // 4: common.v1.XiAnyJid.group_jid:type_name -> common.XiGroupJid
	5, // 5: common.v1.XiConvoId.one_to_one:type_name -> common.v1.OneToOneConvoId
	8, // 6: common.v1.XiConvoId.group:type_name -> common.XiGroupJid
	7, // 7: common.v1.OneToOneConvoId.users:type_name -> common.XiBareUserJid
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_common_v1_model_proto_init() }
func file_common_v1_model_proto_init() {
	if File_common_v1_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_v1_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XiAliasJid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XiBareUserJidOrAliasJid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XiAnyJid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XiKinUserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XiConvoId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneToOneConvoId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XiJWT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_v1_model_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*XiBareUserJidOrAliasJid_BareUserJid)(nil),
		(*XiBareUserJidOrAliasJid_AliasUserJid)(nil),
	}
	file_common_v1_model_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*XiAnyJid_BareUserJid)(nil),
		(*XiAnyJid_AliasUserJid)(nil),
		(*XiAnyJid_GroupJid)(nil),
	}
	file_common_v1_model_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*XiConvoId_OneToOne)(nil),
		(*XiConvoId_Group)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_model_proto_goTypes,
		DependencyIndexes: file_common_v1_model_proto_depIdxs,
		MessageInfos:      file_common_v1_model_proto_msgTypes,
	}.Build()
	File_common_v1_model_proto = out.File
	file_common_v1_model_proto_rawDesc = nil
	file_common_v1_model_proto_goTypes = nil
	file_common_v1_model_proto_depIdxs = nil
}
